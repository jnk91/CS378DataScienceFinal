<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<WorkflowProcess Version="12.1.0.1.4" DBVersion="12.1.0.1.0" xmlns="http://xmlns.oracle.com/odmr11">
    <Nodes>
        <DataSource Id="10031" Name="RE_ELECTRIC_SECTOR" Status="Complete">
            <Icon XCOORD="269" YCOORD="-27"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10031" as (select /*+ inline */ "RE_ELECTRIC_SECTOR"."MONTH", 
"RE_ELECTRIC_SECTOR"."SOLAR_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."TOTAL_ENERGY_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."BIOMASS_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."GEOTHERMAL_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."HYDRO_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."WASTE_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."WIND_TRILLION_BTU", 
"RE_ELECTRIC_SECTOR"."WOOD_TRILLION_BTU" 
from "DS_US_ENERGY"."RE_ELECTRIC_SECTOR"  )</SQLExpression>
            <Attributes>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="SOLAR_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOTAL_ENERGY_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="BIOMASS_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="GEOTHERMAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="HYDRO_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WASTE_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WIND_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WOOD_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="RE_ELECTRIC_SECTOR"/>
        </DataSource>
        <DataSource Id="10032" Name="RE_INDUST_TRANSP" Status="Complete">
            <Icon XCOORD="124" YCOORD="-31"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10032" as (select /*+ inline */ "RE_INDUST_TRANSP"."BIODIESEL_TRANSP_TRILL_BTU", 
"RE_INDUST_TRANSP"."BIOMASS_INDUST_TRILLION_BTU", 
"RE_INDUST_TRANSP"."BIOMASS_LOSS_INDUST_TRILL_BTU", 
"RE_INDUST_TRANSP"."BIOMASS_TRANSPTRILLION_BTU", 
"RE_INDUST_TRANSP"."FUEL_C2H6O_INDUST_TRILL_BTU", 
"RE_INDUST_TRANSP"."FUEL_C2H6O_TRANSP_TRILL_BTU", 
"RE_INDUST_TRANSP"."GEOTHERM_INDUST_TRILLION_BTU", 
"RE_INDUST_TRANSP"."HYDRO_INDUSTRIAL_TRILLION_BTU", 
"RE_INDUST_TRANSP"."MONTH", 
"RE_INDUST_TRANSP"."SOLAR_INDUSTRIAL_TRILLION_BTU", 
"RE_INDUST_TRANSP"."TOTAL_RENEWEN_IND_TRILL_BTU", 
"RE_INDUST_TRANSP"."WASTE_INDUSTRIAL_TRILLION_BTU", 
"RE_INDUST_TRANSP"."WIND_INDUSTRIAL_TRILLION_BTU", 
"RE_INDUST_TRANSP"."WOOD_INDUSTRIAL_TRILLION_BTU" 
from "DS_US_ENERGY"."RE_INDUST_TRANSP"  )</SQLExpression>
            <Attributes>
                <Attribute Name="BIODIESEL_TRANSP_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="BIOMASS_INDUST_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="BIOMASS_LOSS_INDUST_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="BIOMASS_TRANSPTRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="FUEL_C2H6O_INDUST_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="FUEL_C2H6O_TRANSP_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="GEOTHERM_INDUST_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="HYDRO_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="SOLAR_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOTAL_RENEWEN_IND_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WASTE_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WIND_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WOOD_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="RE_INDUST_TRANSP"/>
        </DataSource>
        <DataSource Id="10033" Name="RE_RESCOM" Status="Complete">
            <Icon XCOORD="14" YCOORD="-30"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10033" as (select /*+ inline */ "RE_RESCOM"."BIOMASS_COM_TRILLION_BTU", 
"RE_RESCOM"."ETHANOL_COM_TRILLION_BTU", 
"RE_RESCOM"."GEO_ENERGY_COM", 
"RE_RESCOM"."GEO_ENERGY_RES", 
"RE_RESCOM"."HYDROELECTRIC_COM", 
"RE_RESCOM"."MONTH", 
"RE_RESCOM"."SOLARPV_ENERGY_COM", 
"RE_RESCOM"."SOLARPV_ENERGY_RES", 
"RE_RESCOM"."TOTAL_COM_TRILLION_BTU", 
"RE_RESCOM"."TOTAL_RES_TRILLION_BTU", 
"RE_RESCOM"."WASTE_ENERGY_COM", 
"RE_RESCOM"."WIND_ENERGY_COM", 
"RE_RESCOM"."WOOD_ENERGY_COM", 
"RE_RESCOM"."WOOD_ENERGY_RES" 
from "DS_US_ENERGY"."RE_RESCOM"  )</SQLExpression>
            <Attributes>
                <Attribute Name="BIOMASS_COM_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ETHANOL_COM_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="GEO_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="GEO_ENERGY_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="HYDROELECTRIC_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="SOLARPV_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOLARPV_ENERGY_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOTAL_COM_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOTAL_RES_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WASTE_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WIND_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WOOD_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WOOD_ENERGY_RES" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="RE_RESCOM"/>
        </DataSource>
        <DataSource Id="10034" Name="ENSECTOR" Status="Complete">
            <Icon XCOORD="376" YCOORD="-27"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10034" as (select /*+ inline */ "ENSECTOR"."BALANCE_ITEM", 
"ENSECTOR"."COM_PRI", 
"ENSECTOR"."COM_TOT", 
"ENSECTOR"."ELEC_PRI", 
"ENSECTOR"."INDUS_PRI", 
"ENSECTOR"."INDUS_TOT", 
"ENSECTOR"."MONTH", 
"ENSECTOR"."PRIMARY_TOT", 
"ENSECTOR"."RES_PRI", 
"ENSECTOR"."RES_TOT", 
"ENSECTOR"."TRANS_PRI", 
"ENSECTOR"."TRANS_TOT" 
from "DS_US_ENERGY"."ENSECTOR"  )</SQLExpression>
            <Attributes>
                <Attribute Name="BALANCE_ITEM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELEC_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="PRIMARY_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_TOT" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="ENSECTOR"/>
        </DataSource>
        <DataSource Id="10071" Name="SUBSIDIES" Status="Complete">
            <Icon XCOORD="143" YCOORD="424"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10071" as (select /*+ inline */ "SUBSIDIES"."WIND_BLN_DLRS", 
"SUBSIDIES"."NUCLEAR_DECOMMISSION", 
"SUBSIDIES"."SOLAR_BLN_DLRS", 
"SUBSIDIES"."GEO_BLN_DLRS", 
"SUBSIDIES"."HYDRO_BLN_DLRS", 
"SUBSIDIES"."YEAR", 
"SUBSIDIES"."OIL_BLN_DLRS" 
from "DS_US_ENERGY"."SUBSIDIES"  )</SQLExpression>
            <Attributes>
                <Attribute Name="GEO_BLN_DLRS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="HYDRO_BLN_DLRS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="NUCLEAR_DECOMMISSION" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="OIL_BLN_DLRS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOLAR_BLN_DLRS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="WIND_BLN_DLRS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="YEAR" DataType="DATE" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="SUBSIDIES"/>
        </DataSource>
        <DataSource Id="10084" Name="NGPRICES" Status="Complete">
            <Icon XCOORD="-139" YCOORD="-32"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10084" as (select /*+ inline */ "NGPRICES"."ELECTRIC_DLRS_PER_1000FT3", 
"NGPRICES"."TRANSPORT_DLRS_PER_1000FT3", 
"NGPRICES"."COMMERCIAL_DLRS_PER_1000FT3", 
"NGPRICES"."RESIDENTIAL_DLRS_PER_1000FT3", 
"NGPRICES"."MONTH", 
"NGPRICES"."INDUSTRIAL_DLRS_PER_1000FT3" 
from "DS_US_ENERGY"."NGPRICES"  )</SQLExpression>
            <Attributes>
                <Attribute Name="COMMERCIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELECTRIC_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUSTRIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="RESIDENTIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANSPORT_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="NGPRICES"/>
        </DataSource>
        <DataSource Id="10092" Name="ANLEPRICES" Status="Complete">
            <Icon XCOORD="-138" YCOORD="41"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10092" as (select /*+ inline */ "ANLEPRICES"."AVG_CENTS_KWH_OTH", 
"ANLEPRICES"."AVG_CENTS_KWH_COM", 
"ANLEPRICES"."AVG_CENTS_KWH_INDUST", 
"ANLEPRICES"."AVG_CENTS_KWH_RESI", 
"ANLEPRICES"."YRNUM", 
"ANLEPRICES"."YEAR", 
"ANLEPRICES"."AVG_CENTS_KWH_TRANS", 
"ANLEPRICES"."AVG_CENTS_KWH_TOT" 
from "DS_US_ENERGY"."ANLEPRICES"  )</SQLExpression>
            <Attributes>
                <Attribute Name="AVG_CENTS_KWH_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="AVG_CENTS_KWH_INDUST" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="AVG_CENTS_KWH_OTH" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="AVG_CENTS_KWH_RESI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="AVG_CENTS_KWH_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="AVG_CENTS_KWH_TRANS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="YEAR" DataType="DATE" Status="Valid"/>
                <Attribute Name="YRNUM" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="ANLEPRICES"/>
        </DataSource>
        <DataSource Id="10097" Name="EPRICES" Status="Complete">
            <Icon XCOORD="-138" YCOORD="117"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10097" as (select /*+ inline */ "EPRICES"."TRANSPORTATION_CENTS_PER_KWH", 
"EPRICES"."INDUSTRIAL_CENTS_PE_KWH", 
"EPRICES"."OTHER_CENTS_PER_KWH", 
"EPRICES"."COMMERCIAL_CENTS_PER_KWH", 
"EPRICES"."RESIDENTIAL_CENTS_PER_KWH", 
"EPRICES"."MONTH", 
"EPRICES"."TOTAL_CENTS_PER_KWH" 
from "DS_US_ENERGY"."EPRICES"  )</SQLExpression>
            <Attributes>
                <Attribute Name="TRANSPORTATION_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUSTRIAL_CENTS_PE_KWH" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="OTHER_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COMMERCIAL_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RESIDENTIAL_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="TOTAL_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
            </Attributes>
            <SourceTable Schema="DS_US_ENERGY" Name="EPRICES"/>
        </DataSource>
        <DataProfile Id="10088" Name="Explore Data 1" Status="Complete">
            <Icon XCOORD="-266" YCOORD="-101"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10088" AS ( SELECT /*+ inline */  ATTR,
  DATA_TYPE,
  NULL_PERCENT,
  DISTINCT_CNT,
  DISTINCT_PERCENT,
  MODE_VALUE,
  AVG,
  AVG_DATE,
  AVG_TS_TZ,
  MEDIAN_VAL,
  MEDIAN_DATE,
  MEDIAN_TS_TZ,
  MIN,
  MAX,
  STD,
  VAR,
  SKEWNESS,
  KURTOSIS,
  HISTOGRAMS FROM OUTPUT_15_206)</SQLExpression>
            <DataProfileInput>
                <Attributes>
                    <Attribute Name="COMMERCIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="ELECTRIC_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="INDUSTRIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                    <Attribute Name="RESIDENTIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="TRANSPORT_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                </Attributes>
            </DataProfileInput>
            <DataProfileOutput>
                <Attributes>
                    <Attribute Name="ATTR" DataType="VARCHAR2" Status="Valid"/>
                    <Attribute Name="DATA_TYPE" DataType="VARCHAR2" Status="Valid"/>
                    <Attribute Name="NULL_PERCENT" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="DISTINCT_CNT" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="DISTINCT_PERCENT" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="MODE_VALUE" DataType="NVARCHAR2" Status="Valid"/>
                    <Attribute Name="AVG" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="AVG_DATE" DataType="DATE" Status="Valid"/>
                    <Attribute Name="AVG_TS_TZ" DataType="TIMESTAMP WITH TIME ZONE" Status="Valid"/>
                    <Attribute Name="MEDIAN_VAL" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="MEDIAN_DATE" DataType="DATE" Status="Valid"/>
                    <Attribute Name="MEDIAN_TS_TZ" DataType="TIMESTAMP WITH TIME ZONE" Status="Valid"/>
                    <Attribute Name="MIN" DataType="NVARCHAR2" Status="Valid"/>
                    <Attribute Name="MAX" DataType="NVARCHAR2" Status="Valid"/>
                    <Attribute Name="STD" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="VAR" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="SKEWNESS" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="KURTOSIS" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="HISTOGRAMS" DataType="ODMR_HISTOGRAMS" Status="Valid"/>
                </Attributes>
            </DataProfileOutput>
            <DataProfileSettings>
                <NumericalBins>10</NumericalBins>
                <CategoricalBins>10</CategoricalBins>
                <DateBins>10</DateBins>
            </DataProfileSettings>
            <StatisticTable Name="OUTPUT_15_206" CreationDate="2014-11-19T20:02:13"/>
            <StatsSelection percentdistinct="true" percentnull="true" max="true" min="true" avg="true" std="true" var="true" kurtosis="false" median="true" skewness="false" mode="true" modesampled="true" modeall="false" histogram="true"/>
            <SampleSettings UseFullData="false" GenerateCache="true">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <Random Seed="12345"/>
                </Method>
            </SampleSettings>
        </DataProfile>
        <DataProfile Id="10093" Name="Explore Data 2" Status="Complete">
            <Icon XCOORD="-245" YCOORD="41"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10093" AS ( SELECT /*+ inline */  ATTR,
  DATA_TYPE,
  NULL_PERCENT,
  DISTINCT_CNT,
  DISTINCT_PERCENT,
  MODE_VALUE,
  AVG,
  AVG_DATE,
  AVG_TS_TZ,
  MEDIAN_VAL,
  MEDIAN_DATE,
  MEDIAN_TS_TZ,
  MIN,
  MAX,
  STD,
  VAR,
  SKEWNESS,
  KURTOSIS,
  HISTOGRAMS FROM OUTPUT_17_206)</SQLExpression>
            <DataProfileInput>
                <Attributes>
                    <Attribute Name="AVG_CENTS_KWH_OTH" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="AVG_CENTS_KWH_COM" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="AVG_CENTS_KWH_INDUST" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="AVG_CENTS_KWH_RESI" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="YRNUM" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="YEAR" DataType="DATE" Status="Valid"/>
                    <Attribute Name="AVG_CENTS_KWH_TRANS" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="AVG_CENTS_KWH_TOT" DataType="NUMBER" Status="Valid"/>
                </Attributes>
            </DataProfileInput>
            <DataProfileOutput>
                <Attributes>
                    <Attribute Name="ATTR" DataType="VARCHAR2" Status="Valid"/>
                    <Attribute Name="DATA_TYPE" DataType="VARCHAR2" Status="Valid"/>
                    <Attribute Name="NULL_PERCENT" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="DISTINCT_CNT" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="DISTINCT_PERCENT" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="MODE_VALUE" DataType="NVARCHAR2" Status="Valid"/>
                    <Attribute Name="AVG" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="AVG_DATE" DataType="DATE" Status="Valid"/>
                    <Attribute Name="AVG_TS_TZ" DataType="TIMESTAMP WITH TIME ZONE" Status="Valid"/>
                    <Attribute Name="MEDIAN_VAL" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="MEDIAN_DATE" DataType="DATE" Status="Valid"/>
                    <Attribute Name="MEDIAN_TS_TZ" DataType="TIMESTAMP WITH TIME ZONE" Status="Valid"/>
                    <Attribute Name="MIN" DataType="NVARCHAR2" Status="Valid"/>
                    <Attribute Name="MAX" DataType="NVARCHAR2" Status="Valid"/>
                    <Attribute Name="STD" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="VAR" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="SKEWNESS" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="KURTOSIS" DataType="NUMBER" Status="Valid"/>
                    <Attribute Name="HISTOGRAMS" DataType="ODMR_HISTOGRAMS" Status="Valid"/>
                </Attributes>
            </DataProfileOutput>
            <DataProfileSettings>
                <NumericalBins>10</NumericalBins>
                <CategoricalBins>10</CategoricalBins>
                <DateBins>10</DateBins>
            </DataProfileSettings>
            <StatisticTable Name="OUTPUT_17_206" CreationDate="2014-11-20T11:31:50"/>
            <StatsSelection percentdistinct="true" percentnull="true" max="true" min="true" avg="true" std="true" var="true" kurtosis="false" median="true" skewness="false" mode="true" modesampled="true" modeall="false" histogram="true"/>
            <SampleSettings UseFullData="false" GenerateCache="true">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <Random Seed="12345"/>
                </Method>
            </SampleSettings>
        </DataProfile>
        <Join UseCartesian="false" Id="10021" Name="Join" Status="Complete">
            <Icon XCOORD="91" YCOORD="139"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10021" as (SELECT /*+ inline */
"RE_RESCOM"."BIOMASS_COM_TRILLION_BTU"
, "RE_RESCOM"."ETHANOL_COM_TRILLION_BTU"
, "RE_RESCOM"."GEO_ENERGY_COM"
, "RE_RESCOM"."GEO_ENERGY_RES"
, "RE_RESCOM"."HYDROELECTRIC_COM"
, "RE_RESCOM"."MONTH"
, "RE_RESCOM"."SOLARPV_ENERGY_COM"
, "RE_RESCOM"."SOLARPV_ENERGY_RES"
, "RE_RESCOM"."TOTAL_COM_TRILLION_BTU"
, "RE_RESCOM"."TOTAL_RES_TRILLION_BTU"
, "RE_RESCOM"."WASTE_ENERGY_COM"
, "RE_RESCOM"."WIND_ENERGY_COM"
, "RE_RESCOM"."WOOD_ENERGY_COM"
, "RE_RESCOM"."WOOD_ENERGY_RES"
, "RE_INDUST_TRANSP"."BIODIESEL_TRANSP_TRILL_BTU"
, "RE_INDUST_TRANSP"."BIOMASS_INDUST_TRILLION_BTU"
, "RE_INDUST_TRANSP"."BIOMASS_LOSS_INDUST_TRILL_BTU"
, "RE_INDUST_TRANSP"."BIOMASS_TRANSPTRILLION_BTU"
, "RE_INDUST_TRANSP"."FUEL_C2H6O_INDUST_TRILL_BTU"
, "RE_INDUST_TRANSP"."FUEL_C2H6O_TRANSP_TRILL_BTU"
, "RE_INDUST_TRANSP"."GEOTHERM_INDUST_TRILLION_BTU"
, "RE_INDUST_TRANSP"."HYDRO_INDUSTRIAL_TRILLION_BTU"
, "RE_INDUST_TRANSP"."MONTH" "MONTH1"
, "RE_INDUST_TRANSP"."SOLAR_INDUSTRIAL_TRILLION_BTU"
, "RE_INDUST_TRANSP"."TOTAL_RENEWEN_IND_TRILL_BTU"
, "RE_INDUST_TRANSP"."WASTE_INDUSTRIAL_TRILLION_BTU"
, "RE_INDUST_TRANSP"."WIND_INDUSTRIAL_TRILLION_BTU"
, "RE_INDUST_TRANSP"."WOOD_INDUSTRIAL_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."MONTH" "MONTH2"
, "RE_ELECTRIC_SECTOR"."SOLAR_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."TOTAL_ENERGY_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."BIOMASS_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."GEOTHERMAL_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."HYDRO_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."WASTE_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."WIND_TRILLION_BTU"
, "RE_ELECTRIC_SECTOR"."WOOD_TRILLION_BTU"
, "Date correction"."BALANCE_ITEM"
, "Date correction"."COM_PRI"
, "Date correction"."COM_TOT"
, "Date correction"."ELEC_PRI"
, "Date correction"."INDUS_PRI"
, "Date correction"."INDUS_TOT"
, "Date correction"."MONTH" "MONTH3"
, "Date correction"."PRIMARY_TOT"
, "Date correction"."RES_PRI"
, "Date correction"."RES_TOT"
, "Date correction"."TRANS_PRI"
, "Date correction"."TRANS_TOT"
, "Date correction"."CDATE"
, "NGPRICES"."COMMERCIAL_DLRS_PER_1000FT3"
, "NGPRICES"."ELECTRIC_DLRS_PER_1000FT3"
, "NGPRICES"."INDUSTRIAL_DLRS_PER_1000FT3"
, "NGPRICES"."MONTH" "MONTH4"
, "NGPRICES"."RESIDENTIAL_DLRS_PER_1000FT3"
, "NGPRICES"."TRANSPORT_DLRS_PER_1000FT3"
, "EPRICES"."TRANSPORTATION_CENTS_PER_KWH"
, "EPRICES"."INDUSTRIAL_CENTS_PE_KWH"
, "EPRICES"."OTHER_CENTS_PER_KWH"
, "EPRICES"."COMMERCIAL_CENTS_PER_KWH"
, "EPRICES"."RESIDENTIAL_CENTS_PER_KWH"
, "EPRICES"."MONTH" "MONTH5"
, "EPRICES"."TOTAL_CENTS_PER_KWH"

FROM
{INPUT_SOURCE:10033} "RE_RESCOM"

INNER JOIN {INPUT_SOURCE:10097} "EPRICES"
ON "EPRICES"."MONTH" = "RE_RESCOM"."MONTH"
INNER JOIN {INPUT_SOURCE:10084} "NGPRICES"
ON "NGPRICES"."MONTH" = "RE_RESCOM"."MONTH"
INNER JOIN {INPUT_SOURCE:10027} "Date correction"
ON "Date correction"."CDATE" = "RE_RESCOM"."MONTH"
INNER JOIN {INPUT_SOURCE:10032} "RE_INDUST_TRANSP"
ON "RE_RESCOM"."MONTH" = "RE_INDUST_TRANSP"."MONTH"
INNER JOIN {INPUT_SOURCE:10031} "RE_ELECTRIC_SECTOR"
ON "RE_ELECTRIC_SECTOR"."MONTH" = "RE_RESCOM"."MONTH"
 )</SQLExpression>
            <KeyColumns AutoSpec="No">
                <JoinColumn Type="Inner">
                    <LeftColumn NodeId="10033" NodeName="RE_RESCOM" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                    <RightColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                </JoinColumn>
                <JoinColumn Type="Inner">
                    <LeftColumn NodeId="10033" NodeName="RE_RESCOM" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                    <RightColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                </JoinColumn>
                <JoinColumn Type="Inner">
                    <LeftColumn NodeId="10033" NodeName="RE_RESCOM" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                    <RightColumn NodeId="10027" NodeName="Date correction" Key="Yes" Name="CDATE" DataType="DATE" Status="Valid"/>
                </JoinColumn>
                <JoinColumn Type="Inner">
                    <LeftColumn NodeId="10033" NodeName="RE_RESCOM" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                    <RightColumn NodeId="10084" NodeName="NGPRICES" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                </JoinColumn>
                <JoinColumn Type="Inner">
                    <LeftColumn NodeId="10033" NodeName="RE_RESCOM" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                    <RightColumn NodeId="10097" NodeName="EPRICES" Key="Yes" Name="MONTH" DataType="DATE" Status="Valid"/>
                </JoinColumn>
            </KeyColumns>
            <OutputColumns AutoSpec="Yes">
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="BIOMASS_COM_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="ETHANOL_COM_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="GEO_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="GEO_ENERGY_RES" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="HYDROELECTRIC_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="MONTH" DataType="DATE" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="SOLARPV_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="SOLARPV_ENERGY_RES" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="TOTAL_COM_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="TOTAL_RES_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="WASTE_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="WIND_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="WOOD_ENERGY_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10033" NodeName="RE_RESCOM" Name="WOOD_ENERGY_RES" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="BIODIESEL_TRANSP_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="BIOMASS_INDUST_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="BIOMASS_LOSS_INDUST_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="BIOMASS_TRANSPTRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="FUEL_C2H6O_INDUST_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="FUEL_C2H6O_TRANSP_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="GEOTHERM_INDUST_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="HYDRO_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="MONTH" DataType="DATE" Status="Valid" Alias="MONTH1"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="SOLAR_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="TOTAL_RENEWEN_IND_TRILL_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="WASTE_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="WIND_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10032" NodeName="RE_INDUST_TRANSP" Name="WOOD_INDUSTRIAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="MONTH" DataType="DATE" Status="Valid" Alias="MONTH2"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="SOLAR_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="TOTAL_ENERGY_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="BIOMASS_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="GEOTHERMAL_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="HYDRO_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="WASTE_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="WIND_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10031" NodeName="RE_ELECTRIC_SECTOR" Name="WOOD_TRILLION_BTU" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="BALANCE_ITEM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="COM_PRI" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="COM_TOT" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="ELEC_PRI" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="INDUS_PRI" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="INDUS_TOT" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="MONTH" DataType="DATE" Status="Valid" Alias="MONTH3"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="PRIMARY_TOT" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="RES_PRI" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="RES_TOT" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="TRANS_PRI" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="TRANS_TOT" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10027" NodeName="Date correction" Name="CDATE" DataType="DATE" Status="Valid"/>
                <RefDBColumn NodeId="10084" NodeName="NGPRICES" Name="COMMERCIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10084" NodeName="NGPRICES" Name="ELECTRIC_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10084" NodeName="NGPRICES" Name="INDUSTRIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10084" NodeName="NGPRICES" Name="MONTH" DataType="DATE" Status="Valid" Alias="MONTH4"/>
                <RefDBColumn NodeId="10084" NodeName="NGPRICES" Name="RESIDENTIAL_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10084" NodeName="NGPRICES" Name="TRANSPORT_DLRS_PER_1000FT3" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="TRANSPORTATION_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="INDUSTRIAL_CENTS_PE_KWH" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="OTHER_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="COMMERCIAL_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="RESIDENTIAL_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="MONTH" DataType="DATE" Status="Valid" Alias="MONTH5"/>
                <RefDBColumn NodeId="10097" NodeName="EPRICES" Name="TOTAL_CENTS_PER_KWH" DataType="NUMBER" Status="Valid"/>
            </OutputColumns>
        </Join>
        <Join UseCartesian="false" Id="10081" Name="Join 1" Status="Complete">
            <Icon XCOORD="314" YCOORD="365"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10081" as (SELECT /*+ inline */
"SQL Query 1"."T_S"
, "SQL Query 1"."E_N"
, "SQL Query 1"."T_G"
, "SQL Query 1"."T_W"
, "SQL Query 1"."T_H"
, "SQL Query 1"."YEARYY"
, "SQL Query 1"."PRICE_COM"
, "SQL Query 1"."PRICE_INDUS"
, "SQL Query 1"."PRICE_TRANS"
, "SQL Query 1"."PRICE_RES"
, "SQL Query 1"."PRICE_ELEC"
, "SQL Query 1"."COM_PRICE_CHANGE"
, "SQL Query 1"."RES_PRICE_CHANGE"
, "SQL Query 1"."INDUS_PRICE_CHANGE"
, "SQL Query 1"."TRANS_PRICE_CHANGE"
, "SQL Query 1"."ELEC_PRICE_CHANGE"
, "SQL Query 1"."RES_PRICE_CLASS"
, "SQL Query 1"."TRANS_PRICE_CLASS"
, "SQL Query 1"."COM_PRICE_CLASS"
, "SQL Query 1"."INDUS_PRICE_CLASS"
, "SQL Query 1"."ELEC_PRICE_CLASS"
, "SQL Query 1"."TOT_SOL_CHANGE"
, "SQL Query 1"."SOL_CLASS"
, "SQL Query 1"."SOL_PERCENT_CHANGE"
, "SQL Query 1"."SOL_CHANGE"
, "SQL Query 1"."TOT_WIND_CHANGE"
, "SQL Query 1"."WIND_CLASS"
, "SQL Query 1"."WIND_PERCENT_CHANGE"
, "SQL Query 1"."TOT_GEO_CHANGE"
, "SQL Query 1"."GEO_CLASS"
, "SQL Query 1"."GEO_PRCENT_CHANGE"
, "SQL Query 1"."TOT_HYDRO_CHANGE"
, "SQL Query 1"."HYDRO_CLASS"
, "SQL Query 1"."HYDRO_PERCENT_CHANGE"
, "SQL Query"."YEARYY" "YEARYY1"
, "SQL Query"."GEO_SUB_CLASS"
, "SQL Query"."HYDRO_SUB_CLASS"
, "SQL Query"."OIL_SUB_CLASS"
, "SQL Query"."SOLAR_SUB_CLASS"
, "SQL Query"."WIND_SUB_CLASS"

FROM
{INPUT_SOURCE:10075} "SQL Query 1"

INNER JOIN {INPUT_SOURCE:10073} "SQL Query"
ON "SQL Query 1"."YEARYY" = "SQL Query"."YEARYY"
 )</SQLExpression>
            <KeyColumns AutoSpec="No">
                <JoinColumn Type="Inner">
                    <LeftColumn NodeId="10075" NodeName="SQL Query 1" Key="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                    <RightColumn NodeId="10073" NodeName="SQL Query" Key="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                </JoinColumn>
            </KeyColumns>
            <OutputColumns AutoSpec="Yes">
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="T_S" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="E_N" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="T_G" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="T_W" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="T_H" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10075" NodeName="SQL Query 1" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <RefDBColumn NodeId="10073" NodeName="SQL Query" Name="YEARYY" DataType="NUMBER" Status="Valid" Alias="YEARYY1"/>
                <RefDBColumn NodeId="10073" NodeName="SQL Query" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10073" NodeName="SQL Query" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10073" NodeName="SQL Query" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10073" NodeName="SQL Query" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <RefDBColumn NodeId="10073" NodeName="SQL Query" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </OutputColumns>
        </Join>
        <ColumnFilter Id="10122" Name="Filter Columns 1" Status="Complete">
            <Icon XCOORD="434" YCOORD="434"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10122" as (SELECT /*+ inline */
"COM_PRICE_CLASS",
"ELEC_PRICE_CLASS",
"GEO_CLASS",
"GEO_SUB_CLASS",
"HYDRO_CLASS",
"HYDRO_SUB_CLASS",
"INDUS_PRICE_CLASS",
"OIL_SUB_CLASS",
"RES_PRICE_CLASS",
"SOLAR_SUB_CLASS",
"SOL_CLASS",
"TRANS_PRICE_CLASS",
"WIND_CLASS",
"WIND_SUB_CLASS",
"YEARYY"
FROM {INPUT_SOURCE}
 )</SQLExpression>
            <ColumnFilterSettings NumberOfRows="2000">
                <DataQualitySettings NullsPercent="95.0" UniquePercent="95.0" ConstantPercent="95.0"/>
                <AttrImportantSettings SamplingType="System" StratifiedCutoff="10"/>
            </ColumnFilterSettings>
            <ColumnFilterAttributes AutoSpec="No" AutomaticFilterEnable="No">
                <Attribute AutomaticFiltering="false" Output="No" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="YEARYY1" DataType="NUMBER" Status="Valid"/>
            </ColumnFilterAttributes>
            <ColumnFilterResults DataQualityOutput="ODMR$16_12_44_454000OWCUPPG" GenerateImportanceOutput="false">
                <Attribute Name="COM_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="COM_PRICE_CLASS"/>
                <Attribute Name="ELEC_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="ELEC_PRICE_CLASS"/>
                <Attribute Name="E_N">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="GEO_CLASS"/>
                <Attribute Name="GEO_PRCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="GEO_SUB_CLASS">
                    <Reason Type="CONSTANT_LIMIT"/>
                </Attribute>
                <Attribute Name="HYDRO_CLASS"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="HYDRO_SUB_CLASS">
                    <Reason Type="CONSTANT_LIMIT"/>
                </Attribute>
                <Attribute Name="INDUS_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="INDUS_PRICE_CLASS"/>
                <Attribute Name="OIL_SUB_CLASS"/>
                <Attribute Name="PRICE_COM">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_ELEC">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_INDUS">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_RES">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_TRANS">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="RES_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="RES_PRICE_CLASS"/>
                <Attribute Name="SOLAR_SUB_CLASS"/>
                <Attribute Name="SOL_CHANGE"/>
                <Attribute Name="SOL_CLASS"/>
                <Attribute Name="SOL_PERCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="TOT_GEO_CHANGE"/>
                <Attribute Name="TOT_HYDRO_CHANGE"/>
                <Attribute Name="TOT_SOL_CHANGE"/>
                <Attribute Name="TOT_WIND_CHANGE"/>
                <Attribute Name="TRANS_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="TRANS_PRICE_CLASS"/>
                <Attribute Name="T_G">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="T_H">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="T_S"/>
                <Attribute Name="T_W"/>
                <Attribute Name="WIND_CLASS"/>
                <Attribute Name="WIND_PERCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="WIND_SUB_CLASS"/>
                <Attribute Name="YEARYY">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="YEARYY1">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
            </ColumnFilterResults>
        </ColumnFilter>
        <ColumnFilter Id="10141" Name="Filter Columns 2" Status="Complete">
            <Icon XCOORD="375" YCOORD="643"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10141" as (SELECT /*+ inline */
"COM_PRICE_CLASS",
"ELEC_PRICE_CLASS",
"GEO_CLASS",
"HYDRO_CLASS",
"INDUS_PRICE_CLASS",
"RES_PRICE_CLASS",
"SOL_CLASS",
"TRANS_PRICE_CLASS",
"WIND_CLASS",
"YEARYY"
FROM {INPUT_SOURCE}
 )</SQLExpression>
            <ColumnFilterSettings NumberOfRows="2000">
                <DataQualitySettings NullsPercent="95.0" UniquePercent="95.0" ConstantPercent="95.0"/>
                <AttrImportantSettings SamplingType="System" StratifiedCutoff="10"/>
            </ColumnFilterSettings>
            <ColumnFilterAttributes AutoSpec="No" AutomaticFilterEnable="No">
                <Attribute AutomaticFiltering="false" Output="No" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="No" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute AutomaticFiltering="false" Output="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </ColumnFilterAttributes>
            <ColumnFilterResults DataQualityOutput="ODMR$15_06_27_000000GYRKEKT" GenerateImportanceOutput="false">
                <Attribute Name="COM_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="COM_PRICE_CLASS"/>
                <Attribute Name="ELEC_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="ELEC_PRICE_CLASS"/>
                <Attribute Name="E_N">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="GEO_CLASS"/>
                <Attribute Name="GEO_PRCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="HYDRO_CLASS"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="INDUS_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="INDUS_PRICE_CLASS"/>
                <Attribute Name="PRICE_COM">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_ELEC">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_INDUS">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_RES">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="PRICE_TRANS">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="RES_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="RES_PRICE_CLASS"/>
                <Attribute Name="SOL_CHANGE"/>
                <Attribute Name="SOL_CLASS"/>
                <Attribute Name="SOL_PERCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="TOT_GEO_CHANGE"/>
                <Attribute Name="TOT_HYDRO_CHANGE"/>
                <Attribute Name="TOT_SOL_CHANGE"/>
                <Attribute Name="TOT_WIND_CHANGE"/>
                <Attribute Name="TRANS_PRICE_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="TRANS_PRICE_CLASS"/>
                <Attribute Name="T_G">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="T_H">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="T_S"/>
                <Attribute Name="T_W"/>
                <Attribute Name="WIND_CLASS"/>
                <Attribute Name="WIND_PERCENT_CHANGE">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
                <Attribute Name="YEARYY">
                    <Reason Type="UNIQUE_LIMIT"/>
                </Attribute>
            </ColumnFilterResults>
        </ColumnFilter>
        <ClassificationBuild Id="10162" Name="sol sub" Status="Ready">
            <Icon XCOORD="695" YCOORD="609"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10122"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <TestDataSource>
                <SplitData TestPercent="40.0" DataFormat="Table"/>
            </TestDataSource>
            <TargetAttribute Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            <Models>
                <NaiveBayesModel Id="10158" Name="CLAS_NB_2_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <NaiveBayesAlgo>
                        <NABS_PAIRWISE_THRESHOLD>0.0</NABS_PAIRWISE_THRESHOLD>
                        <NABS_SINGLETON_THRESHOLD>0.0</NABS_SINGLETON_THRESHOLD>
                    </NaiveBayesAlgo>
                </NaiveBayesModel>
                <DecisionTreeModel Id="10159" Name="CLAS_DT_2_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <DecisionTreeAlgo>
                        <TREE_IMPURITY_METRIC>TREE_IMPURITY_GINI</TREE_IMPURITY_METRIC>
                        <TREE_TERM_MAX_DEPTH>7</TREE_TERM_MAX_DEPTH>
                        <TREE_TERM_MINPCT_NODE>0.05</TREE_TERM_MINPCT_NODE>
                        <TREE_TERM_MINPCT_SPLIT>0.1</TREE_TERM_MINPCT_SPLIT>
                        <TREE_TERM_MINREC_NODE>10</TREE_TERM_MINREC_NODE>
                        <TREE_TERM_MINREC_SPLIT>20</TREE_TERM_MINREC_SPLIT>
                    </DecisionTreeAlgo>
                </DecisionTreeModel>
                <CSupportVectorMachineModel Id="10160" Name="CLAS_SVM_2_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <CSupportVectorMachineAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                    </CSupportVectorMachineAlgo>
                </CSupportVectorMachineModel>
            </Models>
            <TestSettings>
                <TopNTargets Value="5"/>
            </TestSettings>
            <Results genAccuracyMetrics="true" genConfusionMatrix="true" genROC="true" genLift="true" genTuning="false"/>
        </ClassificationBuild>
        <ClassificationBuild Id="10189" Name="geo sub" Status="Ready">
            <Icon XCOORD="684" YCOORD="367"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10122"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <TestDataSource>
                <SplitData TestPercent="40.0"/>
            </TestDataSource>
            <TargetAttribute Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            <Models>
                <NaiveBayesModel Id="10192" Name="CLAS_NB_5_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <NaiveBayesAlgo>
                        <NABS_PAIRWISE_THRESHOLD>0.0</NABS_PAIRWISE_THRESHOLD>
                        <NABS_SINGLETON_THRESHOLD>0.0</NABS_SINGLETON_THRESHOLD>
                    </NaiveBayesAlgo>
                </NaiveBayesModel>
                <DecisionTreeModel Id="10191" Name="CLAS_DT_5_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <DecisionTreeAlgo>
                        <TREE_IMPURITY_METRIC>TREE_IMPURITY_GINI</TREE_IMPURITY_METRIC>
                        <TREE_TERM_MAX_DEPTH>7</TREE_TERM_MAX_DEPTH>
                        <TREE_TERM_MINPCT_NODE>0.05</TREE_TERM_MINPCT_NODE>
                        <TREE_TERM_MINPCT_SPLIT>0.1</TREE_TERM_MINPCT_SPLIT>
                        <TREE_TERM_MINREC_NODE>10</TREE_TERM_MINREC_NODE>
                        <TREE_TERM_MINREC_SPLIT>20</TREE_TERM_MINREC_SPLIT>
                    </DecisionTreeAlgo>
                </DecisionTreeModel>
                <CSupportVectorMachineModel Id="10190" Name="CLAS_SVM_5_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <CSupportVectorMachineAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                    </CSupportVectorMachineAlgo>
                </CSupportVectorMachineModel>
            </Models>
            <TestSettings>
                <TopNTargets Value="5"/>
            </TestSettings>
            <Results genAccuracyMetrics="true" genConfusionMatrix="true" genROC="true" genLift="true" genTuning="false"/>
        </ClassificationBuild>
        <ClassificationBuild Id="10174" Name="wind sub" Status="Ready">
            <Icon XCOORD="687" YCOORD="447"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10122"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <TestDataSource>
                <SplitData TestPercent="40.0"/>
            </TestDataSource>
            <TargetAttribute Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            <Models>
                <NaiveBayesModel Id="10177" Name="CLAS_NB_4_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <NaiveBayesAlgo>
                        <NABS_PAIRWISE_THRESHOLD>0.0</NABS_PAIRWISE_THRESHOLD>
                        <NABS_SINGLETON_THRESHOLD>0.0</NABS_SINGLETON_THRESHOLD>
                    </NaiveBayesAlgo>
                </NaiveBayesModel>
                <DecisionTreeModel Id="10176" Name="CLAS_DT_4_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <DecisionTreeAlgo>
                        <TREE_IMPURITY_METRIC>TREE_IMPURITY_GINI</TREE_IMPURITY_METRIC>
                        <TREE_TERM_MAX_DEPTH>7</TREE_TERM_MAX_DEPTH>
                        <TREE_TERM_MINPCT_NODE>0.05</TREE_TERM_MINPCT_NODE>
                        <TREE_TERM_MINPCT_SPLIT>0.1</TREE_TERM_MINPCT_SPLIT>
                        <TREE_TERM_MINREC_NODE>10</TREE_TERM_MINREC_NODE>
                        <TREE_TERM_MINREC_SPLIT>20</TREE_TERM_MINREC_SPLIT>
                    </DecisionTreeAlgo>
                </DecisionTreeModel>
                <CSupportVectorMachineModel Id="10175" Name="CLAS_SVM_4_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <CSupportVectorMachineAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                    </CSupportVectorMachineAlgo>
                </CSupportVectorMachineModel>
            </Models>
            <TestSettings>
                <TopNTargets Value="5"/>
            </TestSettings>
            <Results genAccuracyMetrics="true" genConfusionMatrix="true" genROC="true" genLift="true" genTuning="false"/>
        </ClassificationBuild>
        <ClassificationBuild Id="10164" Name="hydro sub" Status="Ready">
            <Icon XCOORD="690" YCOORD="531"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10122"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <TestDataSource>
                <SplitData TestPercent="40.0"/>
            </TestDataSource>
            <TargetAttribute Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            <Models>
                <NaiveBayesModel Id="10167" Name="CLAS_NB_3_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <NaiveBayesAlgo>
                        <NABS_PAIRWISE_THRESHOLD>0.0</NABS_PAIRWISE_THRESHOLD>
                        <NABS_SINGLETON_THRESHOLD>0.0</NABS_SINGLETON_THRESHOLD>
                    </NaiveBayesAlgo>
                </NaiveBayesModel>
                <DecisionTreeModel Id="10166" Name="CLAS_DT_3_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <DecisionTreeAlgo>
                        <TREE_IMPURITY_METRIC>TREE_IMPURITY_GINI</TREE_IMPURITY_METRIC>
                        <TREE_TERM_MAX_DEPTH>7</TREE_TERM_MAX_DEPTH>
                        <TREE_TERM_MINPCT_NODE>0.05</TREE_TERM_MINPCT_NODE>
                        <TREE_TERM_MINPCT_SPLIT>0.1</TREE_TERM_MINPCT_SPLIT>
                        <TREE_TERM_MINREC_NODE>10</TREE_TERM_MINREC_NODE>
                        <TREE_TERM_MINREC_SPLIT>20</TREE_TERM_MINREC_SPLIT>
                    </DecisionTreeAlgo>
                </DecisionTreeModel>
                <CSupportVectorMachineModel Id="10165" Name="CLAS_SVM_3_206" Status="Ready" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                    </InputMiningData>
                    <Performance>
                        <Balanced/>
                    </Performance>
                    <Tuning>
                        <None/>
                    </Tuning>
                    <CSupportVectorMachineAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                    </CSupportVectorMachineAlgo>
                </CSupportVectorMachineModel>
            </Models>
            <TestSettings>
                <TopNTargets Value="5"/>
            </TestSettings>
            <Results genAccuracyMetrics="true" genConfusionMatrix="true" genROC="true" genLift="true" genTuning="false"/>
        </ClassificationBuild>
        <RegressionBuild Id="10146" Name="Regress Build 1" Status="Complete">
            <Icon XCOORD="-189" YCOORD="564"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10028"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <HeuristicSummaryResult StatisticTable="ODMR$15_32_57_186000YDAIAEN">
                <Attribute Name="YEARYY">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
            </HeuristicSummaryResult>
            <TestDataSource>
                <SplitData TestPercent="40.0" DataFormat="View"/>
            </TestDataSource>
            <TargetAttribute Name="T_S" DataType="NUMBER" Status="Valid"/>
            <Models>
                <RSupportVectorMachineModel Id="10144" Name="REGR_SVM_2_206" Status="Complete" CreationDate="2014-11-20T15:33:14" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$15_32_57_186000YDAIAEN"/>
                    </InputMiningData>
                    <RSupportVectorMachineAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                    </RSupportVectorMachineAlgo>
                </RSupportVectorMachineModel>
                <RGeneralizedLinearModel Id="10145" Name="REGR_GLM_2_206" Status="Complete" CreationDate="2014-11-20T15:33:21" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$15_32_57_186000YDAIAEN"/>
                    </InputMiningData>
                    <RGeneralizedLinearModelAlgo>
                        <GLMS_CONF_LEVEL>0.95</GLMS_CONF_LEVEL>
                        <GLMS_VIF_FOR_RIDGE>GLMS_VIF_RIDGE_DISABLE</GLMS_VIF_FOR_RIDGE>
                        <GLMS_FTR_SELECTION>GLMS_FTR_SELECTION_DISABLE</GLMS_FTR_SELECTION>
                    </RGeneralizedLinearModelAlgo>
                </RGeneralizedLinearModel>
            </Models>
            <Results genAccuracyMetrics="true" genResiduals="true">
                <RegressionResult ModelId="10144" Status="Complete" Name="REGR_SVM_2_206" CreationDate="2014-11-20T15:33:21">
                    <TestMetrics Name="ODMR$15_33_17_169000PNTCWEI" CreationDate="2014-11-20T15:33:17"/>
                    <ResidualPlot Name="ODMR$15_33_19_104000TWAFVDN" CreationDate="2014-11-20T15:33:19"/>
                </RegressionResult>
                <RegressionResult ModelId="10145" Status="Complete" Name="REGR_GLM_2_206" CreationDate="2014-11-20T15:33:26">
                    <TestMetrics Name="ODMR$15_33_23_144000OWISYLV" CreationDate="2014-11-20T15:33:23"/>
                    <ResidualPlot Name="ODMR$15_33_25_359000JJVLYBF" CreationDate="2014-11-20T15:33:25"/>
                </RegressionResult>
            </Results>
        </RegressionBuild>
        <ClusteringBuild Id="10129" Name="Clust Build" Status="Complete">
            <Icon XCOORD="479" YCOORD="514"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10122"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="No" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <HeuristicSummaryResult StatisticTable="ODMR$16_12_48_822000DCQIAAR">
                <Attribute Name="HYDRO_SUB_CLASS">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
                <Attribute Name="YEARYY">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
            </HeuristicSummaryResult>
            <Models>
                <KMeansModel Id="10127" Name="CLUS_KM_1_206" Status="Complete" CreationDate="2014-11-20T16:13:18" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="No" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$16_12_48_822000DCQIAAR">
                            <Attribute Name="HYDRO_SUB_CLASS">
                                <Reason Type="CONSTANT_LIMIT"/>
                            </Attribute>
                        </HeuristicResult>
                    </InputMiningData>
                    <KMeansAlgo>
                        <CLUS_NUM_CLUSTERS>10</CLUS_NUM_CLUSTERS>
                        <KMNS_BLOCK_GROWTH>2</KMNS_BLOCK_GROWTH>
                        <KMNS_CONV_TOLERANCE>0.01</KMNS_CONV_TOLERANCE>
                        <KMNS_DISTANCE>KMNS_EUCLIDEAN</KMNS_DISTANCE>
                        <KMNS_ITERATIONS>30</KMNS_ITERATIONS>
                        <KMNS_MIN_PCT_ATTR_SUPPORT>0.1</KMNS_MIN_PCT_ATTR_SUPPORT>
                        <KMNS_NUM_BINS>10</KMNS_NUM_BINS>
                        <KMNS_SPLIT_CRITERION>KMNS_VARIANCE</KMNS_SPLIT_CRITERION>
                    </KMeansAlgo>
                </KMeansModel>
                <OClusterModel Id="10126" Name="CLUS_OC_1_206" Status="Complete" CreationDate="2014-11-20T16:13:18" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="No" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$16_12_48_822000DCQIAAR">
                            <Attribute Name="HYDRO_SUB_CLASS">
                                <Reason Type="CONSTANT_LIMIT"/>
                            </Attribute>
                        </HeuristicResult>
                    </InputMiningData>
                    <OClusterAlgo>
                        <CLUS_NUM_CLUSTERS>10</CLUS_NUM_CLUSTERS>
                        <OCLT_MAX_BUFFER>50000.0</OCLT_MAX_BUFFER>
                        <OCLT_SENSITIVITY>0.5</OCLT_SENSITIVITY>
                    </OClusterAlgo>
                </OClusterModel>
                <ExpectationMaximizationModel Id="10128" Name="CLUS_EM_1_206" Status="Complete" CreationDate="2014-11-20T16:15:18" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="No" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$16_12_48_822000DCQIAAR">
                            <Attribute Name="HYDRO_SUB_CLASS">
                                <Reason Type="CONSTANT_LIMIT"/>
                            </Attribute>
                        </HeuristicResult>
                    </InputMiningData>
                    <ExpectationMaximizationAlgo>
                        <EMCS_CLUSTER_COMPONENTS>EMCS_CLUSTER_COMP_ENABLE</EMCS_CLUSTER_COMPONENTS>
                        <EMCS_CLUSTER_THRESH>2.0</EMCS_CLUSTER_THRESH>
                        <EMCS_LINKAGE_FUNCTION>EMCS_LINKAGE_SINGLE</EMCS_LINKAGE_FUNCTION>
                        <EMCS_NUM_ITERATIONS>100</EMCS_NUM_ITERATIONS>
                        <EMCS_LOGLIKE_IMPROVEMENT>0.001</EMCS_LOGLIKE_IMPROVEMENT>
                        <EMCS_NUM_DISTRIBUTION>EMCS_NUM_DISTR_SYSTEM</EMCS_NUM_DISTRIBUTION>
                        <EMCS_CLUSTER_STATISTICS>EMCS_CLUS_STATS_ENABLE</EMCS_CLUSTER_STATISTICS>
                        <EMCS_MIN_PCT_ATTR_SUPPORT>0.1</EMCS_MIN_PCT_ATTR_SUPPORT>
                        <EMCS_MAX_NUM_ATTR_2D>50</EMCS_MAX_NUM_ATTR_2D>
                        <EMCS_NUM_PROJECTIONS>50</EMCS_NUM_PROJECTIONS>
                        <EMCS_NUM_EQUIWIDTH_BINS>11</EMCS_NUM_EQUIWIDTH_BINS>
                    </ExpectationMaximizationAlgo>
                </ExpectationMaximizationModel>
            </Models>
        </ClusteringBuild>
        <ClusteringBuild Id="10140" Name="Clust Build 1" Status="Complete">
            <Icon XCOORD="490" YCOORD="643"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10141"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <HeuristicSummaryResult StatisticTable="ODMR$15_06_30_869000XADXAWV">
                <Attribute Name="YEARYY">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
            </HeuristicSummaryResult>
            <Models>
                <KMeansModel Id="10138" Name="CLUS_KM_2_206" Status="Complete" CreationDate="2014-11-20T15:06:47" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$15_06_30_869000XADXAWV"/>
                    </InputMiningData>
                    <KMeansAlgo>
                        <CLUS_NUM_CLUSTERS>10</CLUS_NUM_CLUSTERS>
                        <KMNS_BLOCK_GROWTH>2</KMNS_BLOCK_GROWTH>
                        <KMNS_CONV_TOLERANCE>0.01</KMNS_CONV_TOLERANCE>
                        <KMNS_DISTANCE>KMNS_EUCLIDEAN</KMNS_DISTANCE>
                        <KMNS_ITERATIONS>30</KMNS_ITERATIONS>
                        <KMNS_MIN_PCT_ATTR_SUPPORT>0.1</KMNS_MIN_PCT_ATTR_SUPPORT>
                        <KMNS_NUM_BINS>10</KMNS_NUM_BINS>
                        <KMNS_SPLIT_CRITERION>KMNS_VARIANCE</KMNS_SPLIT_CRITERION>
                    </KMeansAlgo>
                </KMeansModel>
                <OClusterModel Id="10137" Name="CLUS_OC_2_206" Status="Complete" CreationDate="2014-11-20T15:06:47" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$15_06_30_869000XADXAWV"/>
                    </InputMiningData>
                    <OClusterAlgo>
                        <CLUS_NUM_CLUSTERS>10</CLUS_NUM_CLUSTERS>
                        <OCLT_MAX_BUFFER>50000.0</OCLT_MAX_BUFFER>
                        <OCLT_SENSITIVITY>0.5</OCLT_SENSITIVITY>
                    </OClusterAlgo>
                </OClusterModel>
                <ExpectationMaximizationModel Id="10139" Name="CLUS_EM_2_206" Status="Complete" CreationDate="2014-11-20T15:06:48" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$15_06_30_869000XADXAWV"/>
                    </InputMiningData>
                    <ExpectationMaximizationAlgo>
                        <EMCS_CLUSTER_COMPONENTS>EMCS_CLUSTER_COMP_ENABLE</EMCS_CLUSTER_COMPONENTS>
                        <EMCS_CLUSTER_THRESH>2.0</EMCS_CLUSTER_THRESH>
                        <EMCS_LINKAGE_FUNCTION>EMCS_LINKAGE_SINGLE</EMCS_LINKAGE_FUNCTION>
                        <EMCS_NUM_ITERATIONS>100</EMCS_NUM_ITERATIONS>
                        <EMCS_LOGLIKE_IMPROVEMENT>0.001</EMCS_LOGLIKE_IMPROVEMENT>
                        <EMCS_NUM_DISTRIBUTION>EMCS_NUM_DISTR_SYSTEM</EMCS_NUM_DISTRIBUTION>
                        <EMCS_CLUSTER_STATISTICS>EMCS_CLUS_STATS_ENABLE</EMCS_CLUSTER_STATISTICS>
                        <EMCS_MIN_PCT_ATTR_SUPPORT>0.1</EMCS_MIN_PCT_ATTR_SUPPORT>
                        <EMCS_MAX_NUM_ATTR_2D>50</EMCS_MAX_NUM_ATTR_2D>
                        <EMCS_NUM_PROJECTIONS>50</EMCS_NUM_PROJECTIONS>
                        <EMCS_NUM_EQUIWIDTH_BINS>11</EMCS_NUM_EQUIWIDTH_BINS>
                    </ExpectationMaximizationAlgo>
                </ExpectationMaximizationModel>
            </Models>
        </ClusteringBuild>
        <AnomalyDetectionBuild Id="10051" Name="Anomaly Build" Status="Ready">
            <Icon XCOORD="-172" YCOORD="204"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10044"/>
            <CaseAttributes>
                <Attribute Name="month-year" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="month-year" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <HeuristicSummaryResult StatisticTable="ODMR$19_25_12_425000VBDIXQG">
                <Attribute Name="month-year">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
            </HeuristicSummaryResult>
            <Models>
                <AnomalyDetectionModel Id="10050" Name="ANOM_SVM_1_206" Status="Ready" CreationDate="2014-11-19T19:19:36" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="month-year" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$19_19_28_429000PJKJMQK"/>
                    </InputMiningData>
                    <AnomalyDetectionAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                        <SVMS_OUTLIER_RATE>0.1</SVMS_OUTLIER_RATE>
                    </AnomalyDetectionAlgo>
                </AnomalyDetectionModel>
            </Models>
        </AnomalyDetectionBuild>
        <AnomalyDetectionBuild Id="10064" Name="Anomaly Build 1" Status="Ready">
            <Icon XCOORD="-192" YCOORD="413"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10028"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <HeuristicSummaryResult StatisticTable="ODMR$12_14_45_665000GZONPLV">
                <Attribute Name="YEARYY">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
            </HeuristicSummaryResult>
            <Models>
                <AnomalyDetectionModel Id="10063" Name="ANOM_SVM_2_206" Status="Ready" CreationDate="2014-11-20T12:15:04" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_S" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="E_N" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_G" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_W" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="T_H" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="Yes" Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$12_14_45_665000GZONPLV"/>
                    </InputMiningData>
                    <AnomalyDetectionAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                        <SVMS_OUTLIER_RATE>0.1</SVMS_OUTLIER_RATE>
                    </AnomalyDetectionAlgo>
                </AnomalyDetectionModel>
            </Models>
        </AnomalyDetectionBuild>
        <AnomalyDetectionBuild Id="10102" Name="Anomaly Build 2" Status="Complete">
            <Icon XCOORD="458" YCOORD="267"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <BuildDataSource SourceId="10122"/>
            <CaseAttributes>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
            </CaseAttributes>
            <MiningAttributes AutoSpec="Yes">
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="No" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </MiningAttributes>
            <Stoplists>
                <Stoplist Id="1" Name="Default" Type="Basic" Language="ENGLISH" DBName="">
                    <StopTokens>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mr</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Mrs</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>Ms</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>a</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>all</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>almost</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>also</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>although</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>an</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>and</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>any</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>are</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>as</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>at</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>be</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>because</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>been</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>both</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>but</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>by</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>can</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>could</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>d</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>did</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>do</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>does</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>either</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>for</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>from</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>had</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>has</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>have</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>having</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>he</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>her</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>here</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>hers</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>him</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>his</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>how</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>however</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>i</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>if</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>in</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>into</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>is</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>it</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>its</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>just</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ll</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>me</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>might</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>my</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>no</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>non</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>nor</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>not</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>of</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>on</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>one</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>only</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>onto</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>or</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>our</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ours</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>s</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>shall</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>she</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>should</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>since</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>so</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>some</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>still</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>such</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>t</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>than</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>that</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>the</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>their</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>them</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>then</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>there</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>therefore</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>these</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>they</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>this</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>those</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>though</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>through</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>thus</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>to</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>too</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>until</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>ve</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>very</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>was</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>we</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>were</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>what</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>when</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>where</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whether</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>which</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>while</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>who</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>whose</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>why</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>will</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>with</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>would</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yet</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>you</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>your</Item>
                        </Token>
                        <Token Type="Word" Language="ENGLISH">
                            <Item>yours</Item>
                        </Token>
                    </StopTokens>
                </Stoplist>
            </Stoplists>
            <TextSettings TransformType="Token" CategoricalCutOffValue="200">
                <Token>
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Name="" Type="Basic">
                            <Settings/>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Token>
                <Theme Type="Single">
                    <Token MaxNumberPerDoc="50" MaxNumberAllDocs="3000" Frequency="IDF" StoplistId="1" Policy="">
                        <Lexer Type="Basic">
                            <Settings>
                                <Attribute Name="index_themes" ValueString="YES" Type="String"/>
                                <Attribute Name="theme_language" ValueString="ENGLISH" Type="String"/>
                            </Settings>
                        </Lexer>
                        <Languages>
                            <Language Name="ENGLISH" Type="SingleByte"/>
                        </Languages>
                    </Token>
                </Theme>
            </TextSettings>
            <TextAttributes/>
            <HeuristicSummaryResult StatisticTable="ODMR$16_15_35_227000LMWQTVW">
                <Attribute Name="YEARYY">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
                <Attribute Name="HYDRO_SUB_CLASS">
                    <Reason Type="INPUT_NONE"/>
                </Attribute>
            </HeuristicSummaryResult>
            <Models>
                <AnomalyDetectionModel Id="10101" Name="ANOM_SVM_3_206" Status="Complete" CreationDate="2014-11-20T16:15:45" Annotation="" UseForOutput="true">
                    <InputMiningData DataUsage="AUTO" MiningUsage="AUTO">
                        <MiningAttributes>
                            <MiningAttribute AutoPrep="Yes" MiningType="Numerical" Input="No" Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="No" Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                            <MiningAttribute AutoPrep="Yes" MiningType="Categorical" Input="Yes" Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                        </MiningAttributes>
                        <HeuristicResult StatisticTable="ODMR$16_15_35_227000LMWQTVW">
                            <Attribute Name="HYDRO_SUB_CLASS">
                                <Reason Type="CONSTANT_LIMIT"/>
                            </Attribute>
                        </HeuristicResult>
                    </InputMiningData>
                    <AnomalyDetectionAlgo>
                        <SVMS_ACTIVE_LEARNING>SVMS_AL_ENABLE</SVMS_ACTIVE_LEARNING>
                        <SVMS_CONV_TOLERANCE>0.001</SVMS_CONV_TOLERANCE>
                        <SVMS_OUTLIER_RATE>0.1</SVMS_OUTLIER_RATE>
                    </AnomalyDetectionAlgo>
                </AnomalyDetectionModel>
            </Models>
        </AnomalyDetectionBuild>
        <Apply ColumnOutputOrder="OutputColumns" Id="10054" Name="anomalies monthly" Status="Ready">
            <Icon XCOORD="-294" YCOORD="287"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10054" as (SELECT /*+ inline */
PREDICTION("CS378_OH2524"."ANOM_SVM_1_206" USING *) "ANOM_SVM_1_206_PRED", 
PREDICTION_PROBABILITY("CS378_OH2524"."ANOM_SVM_1_206" USING *) "ANOM_SVM_1_206_PROB"
FROM {INPUT_SOURCE} )</SQLExpression>
            <SupplementalAttributes AutoSpec="No"/>
            <OutputColumns AutoSpec="Yes">
                <OutputColumn>
                    <Model IsModelBuilt="false" NodeId="10051" Schema="" Name="ANOM_SVM_1_206" MiningFunction="ANOMALY_DETECTION" MiningAlgorithm="SUPPORT_VECTOR_MACHINES" Status="Valid" UseForOutput="true" ModelId="10050"/>
                    <Prediction>
                        <CostOption>
                            <None/>
                        </CostOption>
                        <Column Name="ANOM_SVM_1_206_PRED"/>
                    </Prediction>
                </OutputColumn>
                <OutputColumn>
                    <Model IsModelBuilt="false" NodeId="10051" Schema="" Name="ANOM_SVM_1_206" MiningFunction="ANOMALY_DETECTION" MiningAlgorithm="SUPPORT_VECTOR_MACHINES" Status="Valid" UseForOutput="true" ModelId="10050"/>
                    <PredictionProbability>
                        <Column Name="ANOM_SVM_1_206_PROB"/>
                    </PredictionProbability>
                </OutputColumn>
            </OutputColumns>
        </Apply>
        <Apply ColumnOutputOrder="SupplementalColumns" Id="10065" Name="anomalies annual" Status="Ready">
            <Icon XCOORD="-287" YCOORD="414"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10065" as (SELECT /*+ inline */
"GEO_CLASS", 
"HYDRO_CLASS", 
"SOL_CLASS", 
"WIND_CLASS", 
"T_W", 
"T_S", 
"T_H", 
"T_G", 
"YEARYY", 
"E_N", 
"ELEC_PRICE_CLASS", 
"COM_PRICE_CLASS", 
"INDUS_PRICE_CLASS", 
"RES_PRICE_CLASS", 
"TRANS_PRICE_CLASS", 
PREDICTION("CS378_OH2524"."ANOM_SVM_2_206" USING *) "ANOM_SVM_2_206_PRED", 
PREDICTION_PROBABILITY("CS378_OH2524"."ANOM_SVM_2_206" USING *) "ANOM_SVM_2_206_PROB"
FROM {INPUT_SOURCE} )</SQLExpression>
            <SupplementalAttributes AutoSpec="No">
                <Attribute Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </SupplementalAttributes>
            <OutputColumns AutoSpec="Yes">
                <OutputColumn>
                    <Model IsModelBuilt="false" NodeId="10064" Schema="" Name="ANOM_SVM_2_206" MiningFunction="ANOMALY_DETECTION" MiningAlgorithm="SUPPORT_VECTOR_MACHINES" Status="Valid" UseForOutput="true" ModelId="10063"/>
                    <Prediction>
                        <CostOption>
                            <None/>
                        </CostOption>
                        <Column Name="ANOM_SVM_2_206_PRED"/>
                    </Prediction>
                </OutputColumn>
                <OutputColumn>
                    <Model IsModelBuilt="false" NodeId="10064" Schema="" Name="ANOM_SVM_2_206" MiningFunction="ANOMALY_DETECTION" MiningAlgorithm="SUPPORT_VECTOR_MACHINES" Status="Valid" UseForOutput="true" ModelId="10063"/>
                    <PredictionProbability>
                        <Column Name="ANOM_SVM_2_206_PROB"/>
                    </PredictionProbability>
                </OutputColumn>
            </OutputColumns>
        </Apply>
        <Apply ColumnOutputOrder="SupplementalColumns" Id="10105" Name="Apply 2" Status="Complete">
            <Icon XCOORD="576" YCOORD="287"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"N$10105" as (SELECT /*+ inline */
"YEARYY", 
"COM_PRICE_CLASS", 
"ELEC_PRICE_CLASS", 
"HYDRO_CLASS", 
"INDUS_PRICE_CLASS", 
"RES_PRICE_CLASS", 
"SOL_CLASS", 
"TRANS_PRICE_CLASS", 
"GEO_SUB_CLASS", 
"HYDRO_SUB_CLASS", 
"OIL_SUB_CLASS", 
"SOLAR_SUB_CLASS", 
"WIND_SUB_CLASS", 
PREDICTION("CS378_OH2524"."ANOM_SVM_3_206" USING *) "ANOM_SVM_3_206_PRED", 
PREDICTION_PROBABILITY("CS378_OH2524"."ANOM_SVM_3_206" USING *) "ANOM_SVM_3_206_PROB"
FROM {INPUT_SOURCE} )</SQLExpression>
            <SupplementalAttributes AutoSpec="No">
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </SupplementalAttributes>
            <OutputColumns AutoSpec="Yes">
                <OutputColumn>
                    <Model IsModelBuilt="false" NodeId="10102" Schema="" Name="ANOM_SVM_3_206" MiningFunction="ANOMALY_DETECTION" MiningAlgorithm="SUPPORT_VECTOR_MACHINES" Status="Valid" UseForOutput="true" ModelId="10101"/>
                    <Prediction>
                        <CostOption>
                            <None/>
                        </CostOption>
                        <Column Name="ANOM_SVM_3_206_PRED"/>
                    </Prediction>
                </OutputColumn>
                <OutputColumn>
                    <Model IsModelBuilt="false" NodeId="10102" Schema="" Name="ANOM_SVM_3_206" MiningFunction="ANOMALY_DETECTION" MiningAlgorithm="SUPPORT_VECTOR_MACHINES" Status="Valid" UseForOutput="true" ModelId="10101"/>
                    <PredictionProbability>
                        <Column Name="ANOM_SVM_3_206_PROB"/>
                    </PredictionProbability>
                </OutputColumn>
            </OutputColumns>
        </Apply>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_1_206" Id="10027" Name="Date correction" Status="Complete">
            <Icon XCOORD="341" YCOORD="81"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"ENSECTOR_N$10034" as (SELECT * FROM {INPUT_SOURCE:10034}),
"N$10027" as (select a.*,
case
when extract(year from month)&lt;2000 then add_months(month, 1200)
when extract(year from month)&gt;=2000 then a.month
end cdate
from "ENSECTOR_N$10034" a)
</SQLExpression>
            <SQLQueryExpression>select a.*,
case
when extract(year from month)&lt;2000 then add_months(month, 1200)
when extract(year from month)&gt;=2000 then a.month
end cdate
from "ENSECTOR_N$10034" a</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="BALANCE_ITEM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELEC_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="MONTH" DataType="DATE" Status="Valid"/>
                <Attribute Name="PRIMARY_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_PRI" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_TOT" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="CDATE" DataType="DATE" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_8_206" Id="10028" Name="annual calculations" Status="Complete">
            <Icon XCOORD="-43" YCOORD="496"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"Join_N$10021" as (SELECT * FROM {INPUT_SOURCE:10021}),
"N$10028" as (select t_s, e_n, t_g, t_w, t_h, yearyy, price_com, price_indus, price_trans, price_res, price_elec,

(price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) com_price_change,
(price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) res_price_change,
(price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) indus_price_change,
(price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) trans_price_change,
(price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) elec_price_change,

case 
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.15 then 'high +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.05 then 'med +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; 0 then 'low +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.15 then 'high -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.05 then 'med -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0 then 'low -'
end res_price_class,

case 
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.1 then 'high +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.05 then 'med +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; 0 then 'low +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.1 then 'high -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.05 then 'med -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0 then 'low -'
end trans_price_class,

case 
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.1 then 'high +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.05 then 'med +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; 0 then 'low +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.1 then 'high -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.05 then 'med -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0 then 'low -'
end com_price_class,

case 
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.15 then 'high +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.05 then 'med +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; 0 then 'low +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.15 then 'high -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.05 then 'med -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0 then 'low -'
end indus_price_class,

case 
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.05 then 'high +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.03 then 'med +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; 0 then 'low +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.05 then 'high -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.03 then 'med -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0 then 'low -'
end elec_price_class,

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,


((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change
from (select sum(total_solar) t_s, sum(en_total) e_n, sum(total_geo) t_g, sum(total_wind) t_w, sum(total_hydro) t_h, 
		sum(residential_cents_per_kwh)/12 price_res, sum(transportation_cents_per_kwh)/12 price_trans, sum(industrial_cents_pe_kwh)/12 price_indus, sum(commercial_cents_per_kwh)/12 price_com,
    sum(elec_pri)/12 price_elec,
    row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month3) &gt; 2020 then (extract(year from month3) - 100)
                  when extract(year from month3) &lt; 2020 then extract(year from month3)
                  end
                  from "Join_N$10021" c
                  where c.month3 = a.month3) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.00001) + nvl(solarpv_energy_res, 0.00001) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.00001) + nvl(SOLAR_TRILLION_BTU,0.00001)) 
                  from "Join_N$10021" d
                  where d.month3 = a.month3 ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.00001) + nvl(wind_industrial_trillion_btu, 0.00001) + nvl(wind_trillion_btu, 0.00001)) 
                  from "Join_N$10021" e
                  where e.month3 = a.month3) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.00001) + nvl(hydro_industrial_trillion_btu, 0.00001) + nvl(hydro_trillion_btu, 0.00001)) 
                  from "Join_N$10021" f
                  where f.month3 = a.month3) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.00001) + nvl(geotherm_indust_trillion_btu, 0.00001) + nvl(geo_energy_com, 0.00001) + nvl(geo_energy_res, 0.00001)) 
                  from "Join_N$10021" g
                  where g.month3 = a.month3) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.00001) + nvl(indus_tot, 0.00001) + nvl(elec_pri, 0.00001) + nvl(res_tot, 0.00001) + nvl(trans_tot, 0.00001))
                  from "Join_N$10021" h
                  where h.month3 = a.month3) as en_total
                  
              from "Join_N$10021" a) sq1
        group by yearyy) t)
</SQLExpression>
            <SQLQueryExpression>select t_s, e_n, t_g, t_w, t_h, yearyy, price_com, price_indus, price_trans, price_res, price_elec,

(price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) com_price_change,
(price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) res_price_change,
(price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) indus_price_change,
(price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) trans_price_change,
(price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) elec_price_change,

case 
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.15 then 'high +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.05 then 'med +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; 0 then 'low +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.15 then 'high -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.05 then 'med -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0 then 'low -'
end res_price_class,

case 
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.1 then 'high +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.05 then 'med +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; 0 then 'low +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.1 then 'high -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.05 then 'med -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0 then 'low -'
end trans_price_class,

case 
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.1 then 'high +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.05 then 'med +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; 0 then 'low +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.1 then 'high -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.05 then 'med -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0 then 'low -'
end com_price_class,

case 
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.15 then 'high +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.05 then 'med +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; 0 then 'low +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.15 then 'high -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.05 then 'med -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0 then 'low -'
end indus_price_class,

case 
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.05 then 'high +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.03 then 'med +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; 0 then 'low +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.05 then 'high -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.03 then 'med -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0 then 'low -'
end elec_price_class,

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,


((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change
from (select sum(total_solar) t_s, sum(en_total) e_n, sum(total_geo) t_g, sum(total_wind) t_w, sum(total_hydro) t_h, 
		sum(residential_cents_per_kwh)/12 price_res, sum(transportation_cents_per_kwh)/12 price_trans, sum(industrial_cents_pe_kwh)/12 price_indus, sum(commercial_cents_per_kwh)/12 price_com,
    sum(elec_pri)/12 price_elec,
    row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month3) &gt; 2020 then (extract(year from month3) - 100)
                  when extract(year from month3) &lt; 2020 then extract(year from month3)
                  end
                  from "Join_N$10021" c
                  where c.month3 = a.month3) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.00001) + nvl(solarpv_energy_res, 0.00001) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.00001) + nvl(SOLAR_TRILLION_BTU,0.00001)) 
                  from "Join_N$10021" d
                  where d.month3 = a.month3 ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.00001) + nvl(wind_industrial_trillion_btu, 0.00001) + nvl(wind_trillion_btu, 0.00001)) 
                  from "Join_N$10021" e
                  where e.month3 = a.month3) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.00001) + nvl(hydro_industrial_trillion_btu, 0.00001) + nvl(hydro_trillion_btu, 0.00001)) 
                  from "Join_N$10021" f
                  where f.month3 = a.month3) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.00001) + nvl(geotherm_indust_trillion_btu, 0.00001) + nvl(geo_energy_com, 0.00001) + nvl(geo_energy_res, 0.00001)) 
                  from "Join_N$10021" g
                  where g.month3 = a.month3) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.00001) + nvl(indus_tot, 0.00001) + nvl(elec_pri, 0.00001) + nvl(res_tot, 0.00001) + nvl(trans_tot, 0.00001))
                  from "Join_N$10021" h
                  where h.month3 = a.month3) as en_total
                  
              from "Join_N$10021" a) sq1
        group by yearyy) t</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_9_206" Id="10044" Name="monthly calculations" Status="Ready">
            <Icon XCOORD="-56" YCOORD="199"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"Join_N$10021" as (SELECT * FROM {INPUT_SOURCE:10021}),
"N$10044" as (select t_s, e_n, t_g, t_w, t_h, "month-year",

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,

((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change

from (select total_solar t_s, en_total e_n, total_geo t_g, total_wind t_w, total_hydro t_h,
        
        case
when extract(year from month) &gt; 2020 then (extract(year from month)-100)*100 + extract(month from month)/12
when extract(year from month) &lt; 2020 then (extract(year from month))*100 + extract(month from month)/12
end "month-year",

            row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month) &gt; 2020 then (extract(year from month) - 100)
                  when extract(year from month) &lt; 2020 then extract(year from month)
                  end
                  from "Join_N$10021" c
                  where c.month = a.month) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.01) + nvl(solarpv_energy_res, 0.01) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.01) + nvl(SOLAR_TRILLION_BTU,0.01) + 0.01) 
                  from "Join_N$10021" d
                  where d.month = a.month ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.01) + nvl(wind_industrial_trillion_btu, 0.01) + nvl(wind_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" e
                  where e.month = a.month) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.01) + nvl(hydro_industrial_trillion_btu, 0.01) + nvl(hydro_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" f
                  where f.month = a.month) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.01) + nvl(geotherm_indust_trillion_btu, 0.01) + nvl(geo_energy_com, 0.01) + nvl(geo_energy_res, 0.01) + 0.01) 
                  from "Join_N$10021" g
                  where g.month = a.month) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.01) + nvl(indus_tot, 0.01) + nvl(elec_pri, 0.01) + nvl(res_tot, 0.01) + nvl(trans_tot, 0.01) + 0.01)
                  from "Join_N$10021" h
                  where h.month = a.month) as en_total
                  
              from "Join_N$10021" a) sq1) t)
</SQLExpression>
            <SQLQueryExpression>select t_s, e_n, t_g, t_w, t_h, "month-year",

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,

((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change

from (select total_solar t_s, en_total e_n, total_geo t_g, total_wind t_w, total_hydro t_h,
        
        case
when extract(year from month) &gt; 2020 then (extract(year from month)-100)*100 + extract(month from month)/12
when extract(year from month) &lt; 2020 then (extract(year from month))*100 + extract(month from month)/12
end "month-year",

            row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month) &gt; 2020 then (extract(year from month) - 100)
                  when extract(year from month) &lt; 2020 then extract(year from month)
                  end
                  from "Join_N$10021" c
                  where c.month = a.month) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.01) + nvl(solarpv_energy_res, 0.01) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.01) + nvl(SOLAR_TRILLION_BTU,0.01) + 0.01) 
                  from "Join_N$10021" d
                  where d.month = a.month ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.01) + nvl(wind_industrial_trillion_btu, 0.01) + nvl(wind_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" e
                  where e.month = a.month) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.01) + nvl(hydro_industrial_trillion_btu, 0.01) + nvl(hydro_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" f
                  where f.month = a.month) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.01) + nvl(geotherm_indust_trillion_btu, 0.01) + nvl(geo_energy_com, 0.01) + nvl(geo_energy_res, 0.01) + 0.01) 
                  from "Join_N$10021" g
                  where g.month = a.month) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.01) + nvl(indus_tot, 0.01) + nvl(elec_pri, 0.01) + nvl(res_tot, 0.01) + nvl(trans_tot, 0.01) + 0.01)
                  from "Join_N$10021" h
                  where h.month = a.month) as en_total
                  
              from "Join_N$10021" a) sq1) t</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="month-year" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_11_206" Id="10060" Name="monthly calculations 1" Status="Ready">
            <Icon XCOORD="-49" YCOORD="284"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"Join_N$10021" as (SELECT * FROM {INPUT_SOURCE:10021}),
"N$10060" as (select t_s, e_n, t_g, t_w, t_h, "month-year",

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,

((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change

from (select total_solar t_s, en_total e_n, total_geo t_g, total_wind t_w, total_hydro t_h,
        
        case
when extract(year from month) &gt; 2020 then (extract(year from month)-100)*100 + extract(month from month)/12
when extract(year from month) &lt; 2020 then (extract(year from month))*100 + extract(month from month)/12
end "month-year",

            row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month) &gt; 2020 then (extract(year from month) - 100)
                  when extract(year from month) &lt; 2020 then extract(year from month)
                  end
                  from "Join_N$10021" c
                  where c.month = a.month) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.01) + nvl(solarpv_energy_res, 0.01) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.01) + nvl(SOLAR_TRILLION_BTU,0.01) + 0.01) 
                  from "Join_N$10021" d
                  where d.month = a.month ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.01) + nvl(wind_industrial_trillion_btu, 0.01) + nvl(wind_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" e
                  where e.month = a.month) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.01) + nvl(hydro_industrial_trillion_btu, 0.01) + nvl(hydro_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" f
                  where f.month = a.month) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.01) + nvl(geotherm_indust_trillion_btu, 0.01) + nvl(geo_energy_com, 0.01) + nvl(geo_energy_res, 0.01) + 0.01) 
                  from "Join_N$10021" g
                  where g.month = a.month) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.01) + nvl(indus_tot, 0.01) + nvl(elec_pri, 0.01) + nvl(res_tot, 0.01) + nvl(trans_tot, 0.01) + 0.01)
                  from "Join_N$10021" h
                  where h.month = a.month) as en_total
                  
              from "Join_N$10021" a) sq1) t)
</SQLExpression>
            <SQLQueryExpression>select t_s, e_n, t_g, t_w, t_h, "month-year",

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,

((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change

from (select total_solar t_s, en_total e_n, total_geo t_g, total_wind t_w, total_hydro t_h,
        
        case
when extract(year from month) &gt; 2020 then (extract(year from month)-100)*100 + extract(month from month)/12
when extract(year from month) &lt; 2020 then (extract(year from month))*100 + extract(month from month)/12
end "month-year",

            row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month) &gt; 2020 then (extract(year from month) - 100)
                  when extract(year from month) &lt; 2020 then extract(year from month)
                  end
                  from "Join_N$10021" c
                  where c.month = a.month) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.01) + nvl(solarpv_energy_res, 0.01) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.01) + nvl(SOLAR_TRILLION_BTU,0.01) + 0.01) 
                  from "Join_N$10021" d
                  where d.month = a.month ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.01) + nvl(wind_industrial_trillion_btu, 0.01) + nvl(wind_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" e
                  where e.month = a.month) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.01) + nvl(hydro_industrial_trillion_btu, 0.01) + nvl(hydro_trillion_btu, 0.01) + 0.01) 
                  from "Join_N$10021" f
                  where f.month = a.month) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.01) + nvl(geotherm_indust_trillion_btu, 0.01) + nvl(geo_energy_com, 0.01) + nvl(geo_energy_res, 0.01) + 0.01) 
                  from "Join_N$10021" g
                  where g.month = a.month) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.01) + nvl(indus_tot, 0.01) + nvl(elec_pri, 0.01) + nvl(res_tot, 0.01) + nvl(trans_tot, 0.01) + 0.01)
                  from "Join_N$10021" h
                  where h.month = a.month) as en_total
                  
              from "Join_N$10021" a) sq1) t</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="month-year" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_12_206" Id="10066" Name="annual calculations 1" Status="Ready">
            <Icon XCOORD="-53" YCOORD="397"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"Join_N$10021" as (SELECT * FROM {INPUT_SOURCE:10021}),
"N$10066" as (select t_s, e_n, t_g, t_w, t_h, yearyy, price_com, price_indus, price_trans, price_res, price_elec,

(price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) com_price_change,
(price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) res_price_change,
(price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) indus_price_change,
(price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) trans_price_change,
(price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) elec_price_change,

case 
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.15 then 'high +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.05 then 'med +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; 0 then 'low +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.15 then 'high -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.05 then 'med -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0 then 'low -'
end res_price_class,

case 
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.1 then 'high +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.05 then 'med +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; 0 then 'low +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.1 then 'high -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.05 then 'med -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0 then 'low -'
end trans_price_class,

case 
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.1 then 'high +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.05 then 'med +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; 0 then 'low +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.1 then 'high -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.05 then 'med -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0 then 'low -'
end com_price_class,

case 
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.15 then 'high +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.05 then 'med +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; 0 then 'low +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.15 then 'high -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.05 then 'med -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0 then 'low -'
end indus_price_class,

case 
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.05 then 'high +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.03 then 'med +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; 0 then 'low +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.05 then 'high -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.03 then 'med -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0 then 'low -'
end elec_price_class,

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,


((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change
from (select sum(total_solar) t_s, sum(en_total) e_n, sum(total_geo) t_g, sum(total_wind) t_w, sum(total_hydro) t_h, 
		sum(residential_cents_per_kwh)/12 price_res, sum(transportation_cents_per_kwh)/12 price_trans, sum(industrial_cents_pe_kwh)/12 price_indus, sum(commercial_cents_per_kwh)/12 price_com,
    sum(elec_pri)/12 price_elec,
    row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month3) &gt; 2020 then (extract(year from month3) - 100)
                  when extract(year from month3) &lt; 2020 then extract(year from month3)
                  end
                  from "Join_N$10021" c
                  where c.month3 = a.month3) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.00001) + nvl(solarpv_energy_res, 0.00001) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.00001) + nvl(SOLAR_TRILLION_BTU,0.00001)) 
                  from "Join_N$10021" d
                  where d.month3 = a.month3 ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.00001) + nvl(wind_industrial_trillion_btu, 0.00001) + nvl(wind_trillion_btu, 0.00001)) 
                  from "Join_N$10021" e
                  where e.month3 = a.month3) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.00001) + nvl(hydro_industrial_trillion_btu, 0.00001) + nvl(hydro_trillion_btu, 0.00001)) 
                  from "Join_N$10021" f
                  where f.month3 = a.month3) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.00001) + nvl(geotherm_indust_trillion_btu, 0.00001) + nvl(geo_energy_com, 0.00001) + nvl(geo_energy_res, 0.00001)) 
                  from "Join_N$10021" g
                  where g.month3 = a.month3) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.00001) + nvl(indus_tot, 0.00001) + nvl(elec_pri, 0.00001) + nvl(res_tot, 0.00001) + nvl(trans_tot, 0.00001))
                  from "Join_N$10021" h
                  where h.month3 = a.month3) as en_total
                  
              from "Join_N$10021" a) sq1
        group by yearyy) t)
</SQLExpression>
            <SQLQueryExpression>select t_s, e_n, t_g, t_w, t_h, yearyy, price_com, price_indus, price_trans, price_res, price_elec,

(price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) com_price_change,
(price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) res_price_change,
(price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) indus_price_change,
(price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) trans_price_change,
(price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) elec_price_change,

case 
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.15 then 'high +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.05 then 'med +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; 0 then 'low +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.15 then 'high -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.05 then 'med -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0 then 'low -'
end res_price_class,

case 
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.1 then 'high +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.05 then 'med +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; 0 then 'low +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.1 then 'high -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.05 then 'med -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0 then 'low -'
end trans_price_class,

case 
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.1 then 'high +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.05 then 'med +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; 0 then 'low +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.1 then 'high -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.05 then 'med -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0 then 'low -'
end com_price_class,

case 
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.15 then 'high +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.05 then 'med +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; 0 then 'low +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.15 then 'high -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.05 then 'med -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0 then 'low -'
end indus_price_class,

case 
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.05 then 'high +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.03 then 'med +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; 0 then 'low +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.05 then 'high -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.03 then 'med -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0 then 'low -'
end elec_price_class,

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,


((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change
from (select sum(total_solar) t_s, sum(en_total) e_n, sum(total_geo) t_g, sum(total_wind) t_w, sum(total_hydro) t_h, 
		sum(residential_cents_per_kwh)/12 price_res, sum(transportation_cents_per_kwh)/12 price_trans, sum(industrial_cents_pe_kwh)/12 price_indus, sum(commercial_cents_per_kwh)/12 price_com,
    sum(elec_pri)/12 price_elec,
    row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month3) &gt; 2020 then (extract(year from month3) - 100)
                  when extract(year from month3) &lt; 2020 then extract(year from month3)
                  end
                  from "Join_N$10021" c
                  where c.month3 = a.month3) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.00001) + nvl(solarpv_energy_res, 0.00001) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.00001) + nvl(SOLAR_TRILLION_BTU,0.00001)) 
                  from "Join_N$10021" d
                  where d.month3 = a.month3 ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.00001) + nvl(wind_industrial_trillion_btu, 0.00001) + nvl(wind_trillion_btu, 0.00001)) 
                  from "Join_N$10021" e
                  where e.month3 = a.month3) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.00001) + nvl(hydro_industrial_trillion_btu, 0.00001) + nvl(hydro_trillion_btu, 0.00001)) 
                  from "Join_N$10021" f
                  where f.month3 = a.month3) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.00001) + nvl(geotherm_indust_trillion_btu, 0.00001) + nvl(geo_energy_com, 0.00001) + nvl(geo_energy_res, 0.00001)) 
                  from "Join_N$10021" g
                  where g.month3 = a.month3) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.00001) + nvl(indus_tot, 0.00001) + nvl(elec_pri, 0.00001) + nvl(res_tot, 0.00001) + nvl(trans_tot, 0.00001))
                  from "Join_N$10021" h
                  where h.month3 = a.month3) as en_total
                  
              from "Join_N$10021" a) sq1
        group by yearyy) t</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_13_206" Id="10073" Name="SQL Query" Status="Complete">
            <Icon XCOORD="229" YCOORD="424"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"SUBSIDIES_N$10071" as (SELECT * FROM {INPUT_SOURCE:10071}),
"N$10073" as (select  extract(year from year) yearyy,

case
when (geo_bln_dlrs - lag(geo_bln_dlrs) over (order by year))/lag(geo_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (geo_bln_dlrs - lag(geo_bln_dlrs) over (order by year))/lag(geo_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end geo_sub_class,

case
when (hydro_bln_dlrs - lag(hydro_bln_dlrs) over (order by year))/lag(hydro_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (hydro_bln_dlrs - lag(hydro_bln_dlrs) over (order by year))/lag(hydro_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end hydro_sub_class,

case
when (oil_bln_dlrs - lag(oil_bln_dlrs) over (order by year))/lag(oil_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (oil_bln_dlrs - lag(oil_bln_dlrs) over (order by year))/lag(oil_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end oil_sub_class,

case
when (solar_bln_dlrs - lag(solar_bln_dlrs) over (order by year))/lag(solar_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (solar_bln_dlrs - lag(solar_bln_dlrs) over (order by year))/lag(solar_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end solar_sub_class,

case
when (wind_bln_dlrs - lag(wind_bln_dlrs) over (order by year))/lag(wind_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (wind_bln_dlrs - lag(wind_bln_dlrs) over (order by year))/lag(wind_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end wind_sub_class

from "SUBSIDIES_N$10071" a)
</SQLExpression>
            <SQLQueryExpression>select  extract(year from year) yearyy,

case
when (geo_bln_dlrs - lag(geo_bln_dlrs) over (order by year))/lag(geo_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (geo_bln_dlrs - lag(geo_bln_dlrs) over (order by year))/lag(geo_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end geo_sub_class,

case
when (hydro_bln_dlrs - lag(hydro_bln_dlrs) over (order by year))/lag(hydro_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (hydro_bln_dlrs - lag(hydro_bln_dlrs) over (order by year))/lag(hydro_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end hydro_sub_class,

case
when (oil_bln_dlrs - lag(oil_bln_dlrs) over (order by year))/lag(oil_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (oil_bln_dlrs - lag(oil_bln_dlrs) over (order by year))/lag(oil_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end oil_sub_class,

case
when (solar_bln_dlrs - lag(solar_bln_dlrs) over (order by year))/lag(solar_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (solar_bln_dlrs - lag(solar_bln_dlrs) over (order by year))/lag(solar_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end solar_sub_class,

case
when (wind_bln_dlrs - lag(wind_bln_dlrs) over (order by year))/lag(wind_bln_dlrs) over (order by year) &gt; 0 then 'increased'
when (wind_bln_dlrs - lag(wind_bln_dlrs) over (order by year))/lag(wind_bln_dlrs) over (order by year) &lt; 0 then 'decreased'
else 'stagnant'
end wind_sub_class

from "SUBSIDIES_N$10071" a</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="GEO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="OIL_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOLAR_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_SUB_CLASS" DataType="VARCHAR2" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
        <SQLQuery HasWithClause="false" GenerateView="false" ViewName="OUTPUT_14_206" Id="10075" Name="SQL Query 1" Status="Complete">
            <Icon XCOORD="204" YCOORD="302"></Icon>
            <Messages/>
            <Parallelism Enable="false">
                <SystemDetermined/>
            </Parallelism>
            <CacheSettings UseFullData="false" GenerateCache="false">
                <NumberOfRows>2000</NumberOfRows>
                <Method>
                    <TopN/>
                </Method>
            </CacheSettings>
            <SQLExpression>"Join_N$10021" as (SELECT * FROM {INPUT_SOURCE:10021}),
"N$10075" as (select t_s, e_n, t_g, t_w, t_h, yearyy, price_com, price_indus, price_trans, price_res, price_elec,

(price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) com_price_change,
(price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) res_price_change,
(price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) indus_price_change,
(price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) trans_price_change,
(price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) elec_price_change,

case 
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.15 then 'high +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.05 then 'med +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; 0 then 'low +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.15 then 'high -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.05 then 'med -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0 then 'low -'
end res_price_class,

case 
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.1 then 'high +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.05 then 'med +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; 0 then 'low +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.1 then 'high -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.05 then 'med -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0 then 'low -'
end trans_price_class,

case 
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.1 then 'high +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.05 then 'med +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; 0 then 'low +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.1 then 'high -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.05 then 'med -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0 then 'low -'
end com_price_class,

case 
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.15 then 'high +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.05 then 'med +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; 0 then 'low +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.15 then 'high -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.05 then 'med -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0 then 'low -'
end indus_price_class,

case 
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.05 then 'high +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.03 then 'med +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; 0 then 'low +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.05 then 'high -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.03 then 'med -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0 then 'low -'
end elec_price_class,

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,


((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change
from (select sum(total_solar) t_s, sum(en_total) e_n, sum(total_geo) t_g, sum(total_wind) t_w, sum(total_hydro) t_h, 
		sum(residential_cents_per_kwh)/12 price_res, sum(transportation_cents_per_kwh)/12 price_trans, sum(industrial_cents_pe_kwh)/12 price_indus, sum(commercial_cents_per_kwh)/12 price_com,
    sum(elec_pri)/12 price_elec,
    row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month3) &gt; 2020 then (extract(year from month3) - 100)
                  when extract(year from month3) &lt; 2020 then extract(year from month3)
                  end
                  from "Join_N$10021" c
                  where c.month3 = a.month3) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.00001) + nvl(solarpv_energy_res, 0.00001) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.00001) + nvl(SOLAR_TRILLION_BTU,0.00001)) 
                  from "Join_N$10021" d
                  where d.month3 = a.month3 ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.00001) + nvl(wind_industrial_trillion_btu, 0.00001) + nvl(wind_trillion_btu, 0.00001)) 
                  from "Join_N$10021" e
                  where e.month3 = a.month3) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.00001) + nvl(hydro_industrial_trillion_btu, 0.00001) + nvl(hydro_trillion_btu, 0.00001)) 
                  from "Join_N$10021" f
                  where f.month3 = a.month3) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.00001) + nvl(geotherm_indust_trillion_btu, 0.00001) + nvl(geo_energy_com, 0.00001) + nvl(geo_energy_res, 0.00001)) 
                  from "Join_N$10021" g
                  where g.month3 = a.month3) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.00001) + nvl(indus_tot, 0.00001) + nvl(elec_pri, 0.00001) + nvl(res_tot, 0.00001) + nvl(trans_tot, 0.00001))
                  from "Join_N$10021" h
                  where h.month3 = a.month3) as en_total
                  
              from "Join_N$10021" a) sq1
        group by yearyy) t)
</SQLExpression>
            <SQLQueryExpression>select t_s, e_n, t_g, t_w, t_h, yearyy, price_com, price_indus, price_trans, price_res, price_elec,

(price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) com_price_change,
(price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) res_price_change,
(price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) indus_price_change,
(price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) trans_price_change,
(price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) elec_price_change,

case 
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.15 then 'high +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt;= 0.05 then 'med +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; 0 then 'low +'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.15 then 'high -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.15 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt;= -0.05 then 'med -'
when (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &gt; -0.05 and (price_res - lag(price_res) over (order by rn))/lag(price_res) over (order by rn) &lt; 0 then 'low -'
end res_price_class,

case 
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.1 then 'high +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt;= 0.05 then 'med +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; 0 then 'low +'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.1 then 'high -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.1 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt;= -0.05 then 'med -'
when (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &gt; -0.05 and (price_trans - lag(price_trans) over (order by rn))/lag(price_trans) over (order by rn) &lt; 0 then 'low -'
end trans_price_class,

case 
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.1 then 'high +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt;= 0.05 then 'med +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; 0 then 'low +'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.1 then 'high -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.1 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt;= -0.05 then 'med -'
when (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &gt; -0.05 and (price_com - lag(price_com) over (order by rn))/lag(price_com) over (order by rn) &lt; 0 then 'low -'
end com_price_class,

case 
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.15 then 'high +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt;= 0.05 then 'med +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; 0 then 'low +'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.15 then 'high -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.15 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt;= -0.05 then 'med -'
when (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &gt; -0.05 and (price_indus - lag(price_indus) over (order by rn))/lag(price_indus) over (order by rn) &lt; 0 then 'low -'
end indus_price_class,

case 
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.05 then 'high +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt;= 0.03 then 'med +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; 0 then 'low +'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.05 then 'high -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.05 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt;= -0.03 then 'med -'
when (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &gt; -0.03 and (price_elec - lag(price_elec) over (order by rn))/lag(price_elec) over (order by rn) &lt; 0 then 'low -'
end elec_price_class,

case 
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_sol_change,

case 
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; 0 then 'low +'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.1 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &gt; -0.05 and ((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end sol_class,

((t_s/e_n) - ((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_s) over (order by rn))/lag(e_n) over (order by rn)) sol_percent_change,

((t_s - lag(t_s) over (order by rn))/lag(t_s) over (order by rn)) sol_change,

case 
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_wind_change,

case 
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; 0 then 'low +'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.1 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &gt; -0.05 and ((t_w - lag(t_w) over (order by rn))/lag(t_w) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end wind_class,

((t_w/e_n) - ((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_w) over (order by rn))/lag(e_n) over (order by rn)) wind_percent_change,

case 
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_geo_change,

case 
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; 0 then 'low +'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.1 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &gt; -0.05 and ((t_g - lag(t_g) over (order by rn))/lag(t_g) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end geo_class,

((t_g/e_n) - ((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_g) over (order by rn))/lag(e_n) over (order by rn)) geo_prcent_change,

case 
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &gt; 0 then 'increased'
when ((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) &lt; 0 then 'decreased'
else 'same'
end tot_hydro_change,

case 
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.1 then 'high +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt;= 0.05 then 'med +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; 0 then 'low +'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt;= -0.1 then 'high -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.1 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; -0.05 then 'med -'
when ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &gt; -0.05 and ((t_h - lag(t_h) over (order by rn))/lag(t_h) over (order by rn)) &lt; 0 then 'low -'
else 'stagnant'
end hydro_class,


((t_h/e_n) - ((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)))/((lag(t_h) over (order by rn))/lag(e_n) over (order by rn)) hydro_percent_change
from (select sum(total_solar) t_s, sum(en_total) e_n, sum(total_geo) t_g, sum(total_wind) t_w, sum(total_hydro) t_h, 
		sum(residential_cents_per_kwh)/12 price_res, sum(transportation_cents_per_kwh)/12 price_trans, sum(industrial_cents_pe_kwh)/12 price_indus, sum(commercial_cents_per_kwh)/12 price_com,
    sum(elec_pri)/12 price_elec,
    row_number() over (order by yearyy) as rn, yearyy
        from (select a.*,
                  (select
                  case
                  when extract(year from month3) &gt; 2020 then (extract(year from month3) - 100)
                  when extract(year from month3) &lt; 2020 then extract(year from month3)
                  end
                  from "Join_N$10021" c
                  where c.month3 = a.month3) as yearyy,
                  
                  (select
                  (nvl(solarpv_energy_com, 0.00001) + nvl(solarpv_energy_res, 0.00001) + nvl(SOLAR_INDUSTRIAL_TRILLION_BTU, 0.00001) + nvl(SOLAR_TRILLION_BTU,0.00001)) 
                  from "Join_N$10021" d
                  where d.month3 = a.month3 ) as total_solar,
                  
                  (select
                  (nvl(wind_energy_com, 0.00001) + nvl(wind_industrial_trillion_btu, 0.00001) + nvl(wind_trillion_btu, 0.00001)) 
                  from "Join_N$10021" e
                  where e.month3 = a.month3) as total_wind,
                  
                  ( select
                  (nvl(hydroelectric_com, 0.00001) + nvl(hydro_industrial_trillion_btu, 0.00001) + nvl(hydro_trillion_btu, 0.00001)) 
                  from "Join_N$10021" f
                  where f.month3 = a.month3) as total_hydro,
                  
                  ( select
                  (nvl(geothermal_trillion_btu, 0.00001) + nvl(geotherm_indust_trillion_btu, 0.00001) + nvl(geo_energy_com, 0.00001) + nvl(geo_energy_res, 0.00001)) 
                  from "Join_N$10021" g
                  where g.month3 = a.month3) as total_geo,
                  
                  (select
                  (nvl(com_tot, 0.00001) + nvl(indus_tot, 0.00001) + nvl(elec_pri, 0.00001) + nvl(res_tot, 0.00001) + nvl(trans_tot, 0.00001))
                  from "Join_N$10021" h
                  where h.month3 = a.month3) as en_total
                  
              from "Join_N$10021" a) sq1
        group by yearyy) t</SQLQueryExpression>
            <SQLQueryOutputColumns>
                <Attribute Name="T_S" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="E_N" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_G" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_W" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="T_H" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="YEARYY" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_COM" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_INDUS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_TRANS" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_RES" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="PRICE_ELEC" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="COM_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="RES_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TRANS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="COM_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="INDUS_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="ELEC_PRICE_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="TOT_SOL_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="SOL_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="SOL_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_WIND_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="WIND_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_GEO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="GEO_PRCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
                <Attribute Name="TOT_HYDRO_CHANGE" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_CLASS" DataType="VARCHAR2" Status="Valid"/>
                <Attribute Name="HYDRO_PERCENT_CHANGE" DataType="NUMBER" Status="Valid"/>
            </SQLQueryOutputColumns>
        </SQLQuery>
    </Nodes>
    <Links>
        <Link Id="10001" From="10033" To="10021" Name="Link" Label="From &quot;RE_RESCOM&quot; to &quot;Join&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10002" From="10032" To="10021" Name="Link" Label="From &quot;RE_INDUST_TRANSP&quot; to &quot;Join&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10003" From="10031" To="10021" Name="Link" Label="From &quot;RE_ELECTRIC_SECTOR&quot; to &quot;Join&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10008" From="10034" To="10027" Name="Link" Label="From &quot;ENSECTOR&quot; to &quot;Date correction&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10009" From="10027" To="10021" Name="Link" Label="From &quot;Date correction&quot; to &quot;Join&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10052" From="10044" To="10051" Name="Link" Label="From &quot;monthly calculations&quot; to &quot;Anomaly Build&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10055" From="10051" To="10054" Name="Link" Label="From &quot;Anomaly Build&quot; to &quot;anomalies monthly&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10062" From="10060" To="10054" Name="Link" Label="From &quot;monthly calculations 1&quot; to &quot;anomalies monthly&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10068" From="10066" To="10065" Name="Link" Label="From &quot;annual calculations 1&quot; to &quot;anomalies annual&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10069" From="10028" To="10064" Name="Link" Label="From &quot;annual calculations&quot; to &quot;Anomaly Build 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10070" From="10064" To="10065" Name="Link" Label="From &quot;Anomaly Build 1&quot; to &quot;anomalies annual&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10074" From="10071" To="10073" Name="Link" Label="From &quot;SUBSIDIES&quot; to &quot;SQL Query&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10076" From="10021" To="10044" Name="Link" Label="From &quot;Join&quot; to &quot;monthly calculations&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10077" From="10021" To="10060" Name="Link" Label="From &quot;Join&quot; to &quot;monthly calculations 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10078" From="10021" To="10066" Name="Link" Label="From &quot;Join&quot; to &quot;annual calculations 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10079" From="10021" To="10028" Name="Link" Label="From &quot;Join&quot; to &quot;annual calculations&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10080" From="10021" To="10075" Name="Link" Label="From &quot;Join&quot; to &quot;SQL Query 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10082" From="10075" To="10081" Name="Link" Label="From &quot;SQL Query 1&quot; to &quot;Join 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10083" From="10073" To="10081" Name="Link" Label="From &quot;SQL Query&quot; to &quot;Join 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10086" From="10084" To="10021" Name="Link" Label="From &quot;NGPRICES&quot; to &quot;Join&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10090" From="10084" To="10088" Name="Link" Label="From &quot;NGPRICES&quot; to &quot;Explore Data 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10094" From="10092" To="10093" Name="Link" Label="From &quot;ANLEPRICES&quot; to &quot;Explore Data 2&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10098" From="10097" To="10021" Name="Link" Label="From &quot;EPRICES&quot; to &quot;Join&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10115" From="10102" To="10105" Name="Link" Label="From &quot;Anomaly Build 2&quot; to &quot;Apply 2&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10123" From="10081" To="10122" Name="Link" Label="From &quot;Join 1&quot; to &quot;Filter Columns 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10124" From="10122" To="10102" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;Anomaly Build 2&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10125" From="10122" To="10105" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;Apply 2&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10130" From="10122" To="10129" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;Clust Build&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10142" From="10028" To="10141" Name="Link" Label="From &quot;annual calculations&quot; to &quot;Filter Columns 2&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10143" From="10141" To="10140" Name="Link" Label="From &quot;Filter Columns 2&quot; to &quot;Clust Build 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10148" From="10028" To="10146" Name="Link" Label="From &quot;annual calculations&quot; to &quot;Regress Build 1&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10193" From="10122" To="10189" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;geo sub&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10194" From="10122" To="10174" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;wind sub&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10195" From="10122" To="10164" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;hydro sub&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
        <Link Id="10196" From="10122" To="10162" Name="Link" Label="From &quot;Filter Columns 1&quot; to &quot;sol sub&quot;">
            <ConnectorGraphicsInfo>
                <Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </ConnectorGraphicsInfo>
        </Link>
    </Links>
</WorkflowProcess>
